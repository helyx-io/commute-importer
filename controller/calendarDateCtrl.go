package controller

////////////////////////////////////////////////////////////////////////////////////////////////
/// Imports
////////////////////////////////////////////////////////////////////////////////////////////////

import (
	"net/http"
	"github.com/gorilla/mux"
	"github.com/helyx-io/gtfs-playground/database"
	"github.com/helyx-io/gtfs-playground/utils"
	"github.com/helyx-io/gtfs-playground/config"
)


////////////////////////////////////////////////////////////////////////////////////////////////
/// Structures
////////////////////////////////////////////////////////////////////////////////////////////////

type CalendarDateController struct { }


////////////////////////////////////////////////////////////////////////////////////////////////
/// Variables
////////////////////////////////////////////////////////////////////////////////////////////////

var (
	calendarDateRepository database.GTFSCalendarDateRepository
)


////////////////////////////////////////////////////////////////////////////////////////////////
/// CalendarDate Controller
////////////////////////////////////////////////////////////////////////////////////////////////

func (calendarDateController *CalendarDateController) Init(r *mux.Router) {
	calendarDateRepository = config.GTFS.CalendarDates().(database.GTFSCalendarDateRepository)

	r.HandleFunc("/", calendarDateController.CalendarDates)
}

func (ac *CalendarDateController) CalendarDates(w http.ResponseWriter, r *http.Request) {
	calendarDates, err := calendarDateRepository.FindAll()

	if err != nil {
		http.Error(w, err.Error(), 500)
	} else if calendarDates == nil {
		http.Error(w, "No calendarDate found", 500)
	} else {
		utils.SendJSON(w, calendarDates.ToJSONCalendarDates())
	}
}
