package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _resources_ddl_agencies_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd0\xc1\x4a\x03\x31\x10\x80\xe1\xfb\x3e\xc5\x5c\x84\x04\x44\x28\x54\x10\xa4\x87\xb4\x1d\x75\x31\x46\x89\xe9\xa1\xa7\x26\xd6\xec\x1a\xd8\x4c\x60\x37\x2b\xea\xd3\xab\x08\xb2\x50\x16\x72\x1c\xe6\x9b\xff\x30\x1b\x8d\xc2\x20\x18\xb1\x96\x08\xb6\xcd\xcd\x70\x38\x1b\xec\x85\x75\xad\xa7\x63\xf0\x83\x05\x56\x01\xfc\x8d\x9f\x87\xf0\x6a\x21\x50\x66\x8b\x05\x07\xf5\x68\x40\xed\xa4\x3c\x9f\xec\xc9\x45\x6f\xe1\xdd\xf5\xc7\x37\xd7\xb3\xe5\x25\x87\x2d\xde\x88\x9d\x3c\x95\x63\xdf\x95\xc1\x1c\xa2\xff\x4a\x54\x98\xed\x1c\xb5\x65\x32\x06\xfa\xd1\xd9\x42\xd3\x25\x97\xe7\x99\xfb\x28\x62\xbf\xb5\x44\x45\xb5\x79\xf6\xa4\xeb\x07\xa1\xf7\x70\x8f\x7b\x60\x93\x9f\xf3\x8a\x03\xaa\xdb\x5a\xe1\xaa\x26\x4a\xdb\xf5\xff\xe5\xe6\x4e\xe8\x67\x34\xab\x31\x37\x57\xf1\x65\x79\x5d\x7d\x07\x00\x00\xff\xff\x77\x3b\x44\x0a\xd0\x01\x00\x00")

func resources_ddl_agencies_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_agencies_sql,
		"resources/ddl/agencies.sql",
	)
}

func resources_ddl_agencies_sql() (*asset, error) {
	bytes, err := resources_ddl_agencies_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/agencies.sql", size: 464, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_calendar_dates_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x48\x4e\xcc\x49\xcd\x4b\x49\x2c\x8a\x4f\x49\x2c\x49\x2d\x4e\x50\xd0\xe0\x52\x50\x48\x28\x4e\x2d\x2a\xcb\x4c\x4e\x8d\xcf\x4c\x49\x50\xc8\xcc\x2b\xd1\x30\x34\xd4\x54\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xd1\x01\x29\x00\x29\x4e\x50\x00\x91\xa8\xe2\xa9\x15\xc9\xa9\x05\x25\x99\xf9\x79\xf1\x25\x95\x05\xa9\x08\xcd\x2e\xae\x6e\x8e\xa1\x3e\x08\x85\x01\x41\x9e\xbe\x8e\x41\x91\x0a\xde\xae\x91\x0a\x1a\xc8\xd6\xe9\x40\xcd\xd6\x04\xa9\x02\xc9\x82\xb9\x40\x99\x0a\xa0\xd3\xa0\x52\x5c\x9a\x0a\xae\x7e\xee\x9e\x7e\xae\xb6\x9e\x79\x79\xf9\x2e\x4e\x70\xd3\x9d\x3d\x1c\x83\x82\x5d\x43\x6c\x4b\x4b\xd2\x2c\x72\x93\x4c\xac\xb9\x00\x01\x00\x00\xff\xff\xd1\x32\x84\x9a\xf5\x00\x00\x00")

func resources_ddl_calendar_dates_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_calendar_dates_sql,
		"resources/ddl/calendar_dates.sql",
	)
}

func resources_ddl_calendar_dates_sql() (*asset, error) {
	bytes, err := resources_ddl_calendar_dates_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/calendar_dates.sql", size: 245, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_calendars_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd1\xcf\x4b\xc3\x30\x14\xc0\xf1\xfb\xfe\x8a\x77\x11\x5a\x10\x61\xe0\x41\x90\x1d\xba\x2d\x6a\xb1\x56\xa9\xdd\x61\xa7\xa6\xae\xa9\x06\x5c\x06\xc9\x8b\xba\xff\xde\xc6\xe5\x17\x08\xc6\x4b\x0f\xcd\x87\x3c\x5e\xbe\xab\x86\x14\x2d\x81\xb6\x58\x56\x04\xe8\x2b\x8e\xaa\x3b\x53\xf4\x82\xee\xfa\x77\x26\x86\x5e\x2a\x0a\xd9\x0c\x80\x2a\x26\x3f\xf8\x8e\x75\x7c\xa0\xc0\x05\x66\xf3\x79\x0e\xf5\x63\x0b\xf5\xa6\xaa\xce\x0d\xd8\x1f\x26\x7e\xa4\x80\x5c\x1c\x7f\x40\x0e\x6b\x72\x53\x6c\xaa\xc8\xa0\x66\x2a\x89\x3e\xd9\x20\xfe\xc1\xf0\x4d\xcb\xb4\x1a\x25\x4f\x1a\xd5\xa3\x96\x69\xa5\xd3\xfb\x29\xec\x25\x76\x43\x8f\x8c\x82\xf9\xfe\x16\xd3\x9b\xfe\x75\xfe\xd4\x94\x0f\x45\xb3\x85\x7b\xb2\x85\x2c\x7e\xf3\xdc\x9c\x9a\xbf\xd1\x8c\xe9\xff\x17\x35\x2c\x4c\x0d\xcc\x0d\x72\xc8\x0f\x0e\xe4\x54\xcc\x01\xdb\x2f\x1c\xdb\x58\xee\xdc\xb5\x0b\xc0\x87\x72\x24\x94\x8b\x6e\xb1\x99\xfc\x35\x2e\x5b\x20\xa7\x46\x0e\xd8\x62\xd1\xc2\x36\x8f\x5f\xd7\xe5\x8a\x88\x8e\x37\xb1\xa5\xf2\x59\x0e\xa4\xbe\x2d\x6b\xb2\x28\x85\x38\xac\x97\xfe\xb5\x57\x77\x45\xf3\x4c\xda\x85\xc6\xf1\x6a\xff\x72\x79\x3d\xfb\x0e\x00\x00\xff\xff\xdf\x3d\x99\x40\x05\x03\x00\x00")

func resources_ddl_calendars_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_calendars_sql,
		"resources/ddl/calendars.sql",
	)
}

func resources_ddl_calendars_sql() (*asset, error) {
	bytes, err := resources_ddl_calendars_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/calendars.sql", size: 773, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_line_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\xc8\xc9\xcc\x4b\x8d\x2f\x2e\xc9\x2f\x28\x4e\x50\xd0\xe0\x52\x50\x80\x08\x64\xa6\x24\x28\x64\xe6\x95\xa4\xa6\xa7\x16\x69\x18\x1a\x6a\x2a\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\x80\x54\x80\x54\xc3\x54\xe0\x90\x4d\xce\x4f\x49\x4d\x50\x28\x4b\x2c\x4a\xce\x48\x2c\xd2\x30\x31\x45\x55\x13\x10\xe4\xe9\xeb\x18\x14\xa9\xe0\xed\x1a\xa9\xa0\x01\xb7\x50\x07\x6e\xb0\x26\x48\x11\x48\x12\x26\x07\x44\x15\x09\x48\x4a\x11\x0a\xa0\x5a\x60\x0a\xe0\x26\x70\x69\x2a\xb8\xfa\xb9\x7b\xfa\xb9\xda\x7a\xe6\xe5\xe5\xbb\x38\x29\xb8\xb8\xba\x39\x86\xfa\x84\x28\x38\x7b\x38\x06\x05\xbb\x86\xd8\x96\x96\xa4\x59\xe4\x26\x99\x58\x73\x01\x02\x00\x00\xff\xff\x7d\xce\x4a\x66\x19\x01\x00\x00")

func resources_ddl_create_table_line_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_line_stops_sql,
		"resources/ddl/create-table-line_stops.sql",
	)
}

func resources_ddl_create_table_line_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_line_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-line_stops.sql", size: 281, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8d\x51\x6b\x83\x30\x14\x85\xdf\xfd\x15\xf7\x65\x90\xc0\x18\x08\x0e\x06\xc3\x87\xa8\x77\x5b\x58\x8c\x25\x8d\x0f\x3e\x19\xdb\x46\x2b\xd4\x14\xd4\x96\xfe\xfc\xaa\x50\x7d\xbb\x9c\x7b\xbe\xef\xc4\x0a\x99\x46\xd0\x2c\x12\x08\xa6\x19\xeb\xa1\x7c\x1b\xcc\x87\xb9\xb4\xce\x0e\x06\x88\x07\xb0\xdc\x65\x7b\x32\xd0\xba\xd1\x36\xb6\x27\xbe\x4f\x41\x66\x1a\x64\x2e\x04\xb0\x5c\x67\x25\x97\x93\x28\x45\xa9\xdf\x57\xc0\x55\x9d\x35\x70\xaf\xfa\xe3\xb9\xea\x49\xf0\xb9\x21\x73\x67\xa7\x78\xca\x54\x01\xff\x58\x00\x59\x17\xe8\xfc\x9a\xa3\x4d\x31\xc5\x0f\xf3\xaa\x2c\x4e\xea\x51\x40\xf9\xcb\x25\x86\xdc\xb9\x6b\x12\x41\x82\x3f\x2c\x17\x1a\xe2\x3f\xa6\xf6\xa8\xc3\xdb\x58\x7f\x75\x87\xe0\xdb\x7b\x06\x00\x00\xff\xff\xf6\x63\x77\x3b\xde\x00\x00\x00")

func resources_ddl_create_table_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_lines_sql,
		"resources/ddl/create-table-lines.sql",
	)
}

func resources_ddl_create_table_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-lines.sql", size: 222, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_route_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\xca\x2f\x2d\x49\x8d\x2f\x2e\xc9\x2f\x28\x4e\x50\xd0\xe0\x52\x50\x80\x8a\x64\xa6\x24\x28\x64\xe6\x95\x68\x18\x1a\x6a\x2a\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\x80\xa4\x41\x4a\x09\xc8\x26\xe7\xa7\xa4\x26\x28\x94\x25\x16\x25\x67\x24\x16\x69\x98\x98\xa2\xaa\x09\x08\xf2\xf4\x75\x0c\x8a\x54\xf0\x76\x8d\x54\xd0\x40\xd8\xa6\x03\x37\x59\x13\xa4\x0a\x24\x0b\x97\x04\xa2\x8a\x04\x64\xc5\x08\x25\x50\x4d\x30\x15\x70\x33\xb8\x34\x15\x5c\xfd\xdc\x3d\xfd\x5c\x6d\x3d\xf3\xf2\xf2\x5d\x9c\x14\x5c\x5c\xdd\x1c\x43\x7d\x42\x14\x9c\x3d\x1c\x83\x82\x5d\x43\x6c\x4b\x4b\xd2\x2c\x72\x93\x4c\xac\xb9\x00\x01\x00\x00\xff\xff\x9e\xaf\x96\xfb\x1a\x01\x00\x00")

func resources_ddl_create_table_route_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_route_stops_sql,
		"resources/ddl/create-table-route_stops.sql",
	)
}

func resources_ddl_create_table_route_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_route_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-route_stops.sql", size: 282, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_station_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\x2e\x49\x2c\xc9\xcc\xcf\x8b\xcf\xc9\xcc\x4b\x2d\x4e\x50\xd0\xe0\x52\x50\x80\x8b\x65\xa6\x24\x28\x64\xe6\x95\xa4\xa6\xa7\x16\x69\x18\x1a\x6a\x2a\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\x80\x14\x81\x34\xe0\x55\x11\x10\xe4\xe9\xeb\x18\x14\xa9\xe0\xed\x1a\xa9\xa0\x81\x6c\xa6\x0e\x42\xb3\x26\x48\x21\x48\x01\x92\x3c\x10\x55\x24\xa0\xea\x40\x28\x83\x6a\x84\xa9\x81\x9b\xc3\xa5\xa9\xe0\xea\xe7\xee\xe9\xe7\x6a\xeb\x99\x97\x97\xef\xe2\xa4\xe0\xe2\xea\xe6\x18\xea\x13\xa2\xe0\xec\xe1\x18\x14\xec\x1a\x62\x5b\x5a\x92\x66\x91\x9b\x64\x62\xcd\x05\x08\x00\x00\xff\xff\xc2\x68\x31\xd4\x09\x01\x00\x00")

func resources_ddl_create_table_station_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_station_lines_sql,
		"resources/ddl/create-table-station_lines.sql",
	)
}

func resources_ddl_create_table_station_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_station_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-station_lines.sql", size: 265, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_station_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\x2e\x49\x2c\xc9\xcc\xcf\x8b\x2f\x2e\xc9\x2f\x28\x4e\x50\xd0\xe0\x52\x50\x80\x8b\x65\xa6\x24\x28\x64\xe6\x95\xa4\xa6\xa7\x16\x69\x18\x1a\x6a\x2a\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\x40\x14\xe5\x17\xc0\x54\x60\xc8\x06\x04\x79\xfa\x3a\x06\x45\x2a\x78\xbb\x46\x2a\x68\x20\x9b\xa7\x03\xd7\xa7\x09\x52\x07\x92\x47\x92\x06\xa2\x8a\x04\x54\x0d\xc8\xca\xc0\x1a\x11\x6a\xa0\xe6\x70\x69\x2a\xb8\xfa\xb9\x7b\xfa\xb9\xda\x7a\xe6\xe5\xe5\xbb\x38\x29\xb8\xb8\xba\x39\x86\xfa\x84\x28\x38\x7b\x38\x06\x05\xbb\x86\xd8\x96\x96\xa4\x59\xe4\x26\x99\x58\x73\x01\x02\x00\x00\xff\xff\x1b\xcd\x2c\xa6\x04\x01\x00\x00")

func resources_ddl_create_table_station_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_station_stops_sql,
		"resources/ddl/create-table-station_stops.sql",
	)
}

func resources_ddl_create_table_station_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_station_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-station_stops.sql", size: 260, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_stations_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x41\x4b\xc3\x30\x14\xc7\xef\xfd\x14\xef\x22\xb4\x20\xc2\x60\x88\x20\x3b\x64\xdb\x53\x83\x59\x36\xba\xf4\xb0\x53\x5f\xd4\xb4\x16\xd6\x04\xda\xa7\xe8\xb7\xb7\x1d\xa8\x8d\x08\xbb\x04\x92\xf7\xfb\xe5\xfd\xff\xab\x1c\x85\x41\x30\x62\xa9\x10\xa8\xe6\xaa\x2f\x2f\x7a\xba\xa2\x9e\x2d\x37\xc1\xf7\x04\x69\x02\xf0\x7d\x2d\x9b\x17\x82\xc6\xb3\xab\x5d\x97\xce\x66\x19\xe8\xad\x01\x5d\x28\x05\xa2\x30\xdb\x52\xea\xe1\xbb\x0d\x6a\x73\x39\x75\xbc\x6d\x1d\xc1\xbb\xed\x9e\x5f\x6d\x97\x5e\xcf\x7f\xad\x08\x3b\x5a\x26\xa8\x8e\xc1\x32\xac\xf1\x4e\x14\xea\x3f\x26\xf8\xb3\x4c\xed\x02\xc1\x70\xb4\x8e\xbb\xcf\x68\xd5\x2e\x97\x1b\x91\x1f\xe0\x11\x0f\x90\x4e\x2b\x65\xe3\x74\x7c\x8d\x32\x0f\x93\x0f\x9a\x80\xa7\x1e\x27\x74\xbf\x13\x46\x0a\x15\x2b\xc3\xca\xbf\xc6\x18\x25\x4b\x32\x40\x7d\x2f\x35\x2e\xa4\xf7\x61\xbd\xfc\x49\xbe\x7a\x10\xf9\x1e\xcd\xe2\x8d\xab\x9b\xf6\x69\x7e\x9b\x7c\x05\x00\x00\xff\xff\xf3\xfd\x9e\x81\x8c\x01\x00\x00")

func resources_ddl_create_table_stations_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_stations_sql,
		"resources/ddl/create-table-stations.sql",
	)
}

func resources_ddl_create_table_stations_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_stations_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-stations.sql", size: 396, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_stop_times_full_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd3\xcd\x8e\xda\x30\x10\x07\xf0\xfb\x3e\x85\x2f\x95\x40\xaa\x2a\x51\xd1\x6a\xa5\x6a\x0f\x59\x30\x14\x29\x0d\x12\x0d\x87\x9e\x62\xe3\x4c\x12\x8b\x60\xa7\xf6\x04\x95\x3e\xfd\x86\x44\xe2\x2b\x21\xce\x85\x03\xfe\x69\x3c\x93\xbf\x67\xb6\xa1\x5e\x48\x49\xe8\xbd\xfb\x94\xb0\x14\x13\x1b\x7d\xb2\xec\x0b\xb3\xa8\x8b\x08\xe5\x01\x6c\x94\x94\x79\xce\xc8\xe8\x85\x90\xe6\x5f\x19\x33\x22\x15\x8e\x26\x93\x31\x09\xd6\x21\x09\xb6\xbe\xff\xf9\x72\x2a\x74\x0c\x8c\x1c\xb9\x11\x19\x37\xa3\xe9\xb7\x31\x99\xd3\x85\xb7\xf5\x1f\x9d\xe2\x87\x1b\xf7\x7d\xfa\xcc\xc5\x60\xc5\xd5\x4d\xbe\xbe\x3e\x83\x39\x47\x46\x16\xfe\xda\x0b\x9f\x01\xad\xfa\x41\x0a\x9a\x91\x25\x5d\xff\xa2\xe1\xe6\x4f\xdb\xfc\xd7\x0a\xea\xe1\xdd\xc3\x95\x26\x77\xb0\x5c\x0b\x8e\x52\xab\x08\x4f\x05\x5c\xbf\x67\xcb\x15\xdc\x80\xc2\xc8\x62\xad\x1d\x45\xb9\x31\xf2\xc8\xf3\x3a\x37\x46\xce\xbf\x6d\x13\x43\x55\x12\x4b\x03\xbd\xaa\x9e\xc2\xc2\xdf\x12\x94\xe8\x6b\xaf\x76\x19\xf0\x38\xb2\x32\xbd\x69\xaf\x2b\xa5\x42\x8a\x7d\x59\xb8\x06\x8e\x4d\x55\x51\x27\x89\xcb\x59\x30\x47\x29\x06\x04\x82\x46\xf6\xbc\xd9\xfa\xf4\x3c\xc0\x7d\xff\x9d\x95\x62\x69\x40\xd4\xa1\xdd\x96\x6b\xb1\x5d\x95\xed\x7e\xc0\x43\xc9\x78\x31\xa0\x7d\x9e\x56\x11\x9c\xfa\x6f\x34\xba\x44\x18\x42\x6c\xa6\x0d\x3e\xac\x5e\xe7\xad\x0d\xaf\x36\x26\x7d\xd0\xdd\x0b\xd8\xf0\xfb\x55\xed\x5c\xe9\x06\x3a\xa2\x6d\x90\x7b\x87\x1a\x27\x74\xae\xcd\x20\x89\xf0\x0f\x5d\xfc\x65\x4c\x68\xb0\x5c\x05\xf4\x6d\xa5\x94\x9e\xbf\x5f\x0e\x67\x3f\xbd\xcd\x6f\x1a\xbe\x95\x98\xbc\x1e\x76\xd3\x1f\x1f\x01\x00\x00\xff\xff\x31\xd3\x1c\x1a\x39\x05\x00\x00")

func resources_ddl_create_table_stop_times_full_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_stop_times_full_sql,
		"resources/ddl/create-table-stop_times_full.sql",
	)
}

func resources_ddl_create_table_stop_times_full_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_stop_times_full_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-stop_times_full.sql", size: 1337, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_line_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x51\x4e\xc4\x30\x0c\x44\xbf\x37\xa7\xf0\x0f\x12\x48\x28\x17\x40\x7b\x96\x16\x1a\x2f\x18\xa5\x36\xb2\xcd\x07\xb7\x27\x0e\xd9\x0d\x42\xa8\xfd\x9a\xa9\xfc\x66\xa2\x21\x36\x54\x07\x62\x17\x58\x5f\xfd\x62\xcb\x9d\xad\x79\xad\xc4\xb8\x98\xcb\x87\xad\x70\xdf\x0d\x95\x47\x88\x1f\x53\x6c\x52\xf0\x01\x0c\x2b\x6e\x0e\x85\xcc\x89\x37\x4f\x27\xa8\x79\x02\x79\x22\xf9\x06\xa5\x8b\xca\x9e\x4e\xbf\xea\x46\x93\xb5\x77\x30\x2a\xbc\x0b\x71\x82\xf6\xfd\x39\x59\x9c\x76\x8c\x3b\x07\xe1\x19\x7e\x36\xbf\x4a\x38\x48\x70\xa5\x28\xe9\xac\xe7\x70\x83\x1d\xf2\x88\x55\xf9\xf4\x68\xd6\x1f\xb8\xdb\xa0\xf5\x26\x0f\xe0\x98\xa3\xb1\x35\xd8\x2b\x60\x6f\xa2\xbe\xf0\xf3\x8e\xe7\xb1\x57\xe8\x24\x5a\x5a\xc8\xcb\x57\x8f\xf8\x6f\xc8\xa7\xf4\x1d\x00\x00\xff\xff\xf7\x5c\xdf\xe3\xb2\x01\x00\x00")

func resources_ddl_insert_line_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_line_stops_sql,
		"resources/ddl/insert-line_stops.sql",
	)
}

func resources_ddl_insert_line_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_line_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-line_stops.sql", size: 434, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8c\x31\x0e\xc2\x40\x0c\x04\xfb\x7b\xc5\x36\x48\xd0\xe4\x03\x3c\xe6\x2e\x24\x0e\x58\x4a\x6c\xc9\x5e\x0a\x7e\xcf\x71\x05\xa2\x61\x9b\x6d\x66\x46\x2d\x25\x08\x35\x3a\xda\x9d\x5b\xd6\x53\xb6\xa9\xed\x6a\x92\x0d\xe7\xcf\x57\x9b\x0f\xb9\x20\x65\x97\x85\x58\x35\xa9\xb6\xb0\xa0\x2f\xa6\xf0\x27\xa5\xe6\xc3\x83\x83\xc3\x9c\xf8\x4a\x65\x0b\x3f\x06\xf8\x93\x1e\x46\x6f\x47\xf1\x58\x25\x70\x7b\xfd\x49\x5d\xcb\x3b\x00\x00\xff\xff\x0f\x00\x83\x13\x9d\x00\x00\x00")

func resources_ddl_insert_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_lines_sql,
		"resources/ddl/insert-lines.sql",
	)
}

func resources_ddl_insert_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-lines.sql", size: 157, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_route_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8f\x41\xae\xc2\x30\x0c\x44\xf7\x3d\x85\x37\x5f\xfa\x48\x28\x17\x40\x3d\x4b\x23\x35\x2e\x32\xa2\x31\xb2\x87\xfb\x93\xb4\xb4\xe9\x02\xe8\xa2\xb2\xa3\x79\x79\x19\xc9\xce\x06\x92\x0c\xa5\x78\xc5\xe4\xc3\x9f\xc7\x10\x4d\x9f\xe0\xc1\xa1\x0f\x8f\xf4\xbf\x6e\x92\xce\x54\x4f\xda\x30\x6a\xe2\x13\x39\xdf\x79\x04\x25\x71\x48\x1e\xd1\x51\xf9\x2c\x1c\x98\xd0\xa8\xb0\x73\xdd\x64\x3a\x2f\xd9\x83\xf6\x2d\xf4\xf2\x9e\xcc\x46\x37\x95\xfc\x29\x32\x40\x66\xae\x39\x90\xe6\xf2\xdf\x04\xd4\x37\xd9\x8f\x2b\x60\x52\x2d\x1b\x5c\xd7\x15\x6e\xf3\x77\x78\xe9\x55\x68\xab\x34\xf6\x9a\x7d\x6b\x7c\xe9\x5e\x01\x00\x00\xff\xff\x4a\x6b\xec\xca\x55\x01\x00\x00")

func resources_ddl_insert_route_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_route_stops_sql,
		"resources/ddl/insert-route_stops.sql",
	)
}

func resources_ddl_insert_route_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_route_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-route_stops.sql", size: 341, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_station_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x51\x0a\xc2\x30\x0c\x86\xdf\x77\x8a\xbc\x08\x0a\xb2\x0b\xc8\xce\xd2\xca\xd6\x49\xa4\x26\xa3\x7f\xee\x8f\xcd\xdc\xd4\x21\x6a\x9f\x92\xf2\xe5\xfb\x13\x16\xa4\x62\xc4\x62\x4a\xf1\x62\x23\xc2\x0e\xb1\x8d\xb0\xb3\xb1\x4a\xc8\x2c\x09\x91\xf6\x6b\xcf\xc3\x91\xfc\xaf\x16\x07\x42\xca\xa9\x37\x1a\x18\xc6\xd2\x5b\x43\xf5\xa1\xdd\xa0\x68\x17\xba\x19\x8b\xde\x66\xe2\x33\xa5\x06\xa0\x6e\x20\xa9\xd0\x55\x59\xbe\x50\x01\xa6\x93\xa3\x20\x95\x4d\x4e\x87\xf7\xee\x87\x69\xde\x65\xd1\xe4\x87\xc6\x27\x75\x72\x49\x7e\x96\x7f\x0c\x3e\xec\xb3\x79\xbd\xad\x7b\x9d\x79\x6a\xee\x01\x00\x00\xff\xff\xdf\xd5\xe6\xdb\x51\x01\x00\x00")

func resources_ddl_insert_station_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_station_lines_sql,
		"resources/ddl/insert-station_lines.sql",
	)
}

func resources_ddl_insert_station_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_station_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-station_lines.sql", size: 337, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_station_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x3d\xc5\xdf\x08\x0a\x92\x0b\x88\x67\x69\x4a\x3b\x95\x11\x3b\x23\x99\x7f\x7f\x4c\x82\x05\x8b\x59\x65\x3e\x8f\xf7\xd4\x42\x0a\xa1\x46\x47\x7e\x70\x8d\xf1\x14\x39\xe5\xe0\x44\x75\x1b\x83\xfe\x8e\x8c\xf3\x7e\xeb\x72\x45\xdb\xea\xe7\x82\x90\x97\xcc\xc4\xa2\x41\xb5\x99\x03\xea\x0b\xa6\x03\x9b\xbe\xf4\xb0\x16\xdf\x3a\x71\xa8\x74\x7b\xa0\xf6\x4d\x0a\x9e\xae\xf6\xcf\x74\x5b\xc3\x08\xb7\xdd\x68\xd3\x26\xb8\xff\xe6\xda\x72\x1b\x3e\x01\x00\x00\xff\xff\x04\x52\x0b\xc6\xd0\x00\x00\x00")

func resources_ddl_insert_station_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_station_stops_sql,
		"resources/ddl/insert-station_stops.sql",
	)
}

func resources_ddl_insert_station_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_station_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-station_stops.sql", size: 208, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_stations_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x31\x8e\xc2\x30\x10\x45\x7b\x9f\x62\x9a\x95\x6d\x29\xca\x05\xb6\xdf\xd5\x36\x0b\x45\xfa\xd8\x18\xc7\xb2\x94\xcc\x44\x99\x01\xc1\xed\x31\x21\x88\x40\x5c\xf9\xbd\xe2\x69\x7e\x46\x8e\x93\x40\x46\x21\x70\x49\x3a\x6e\xbf\xd8\xd5\x8e\xc5\x4b\x26\x64\x07\x66\xf9\xb6\xe8\x87\x58\xc1\x93\x7a\x2f\x2b\x20\x7c\x41\x8a\x64\x81\x63\x1f\x83\xc0\x31\xb3\x64\x0c\xa2\xa0\x3c\xae\x59\x68\x7c\x74\x66\xe1\xcf\xc9\x2c\xb2\xe4\xec\x56\x12\x2e\xf2\x37\xd2\xf0\x33\xd1\xd0\xc4\x8b\x98\x40\x18\xbc\x18\xbd\xdf\xfd\xfd\x37\x46\x57\x9b\x0e\x68\xf8\xb0\xf7\x10\x68\xab\xad\x55\x5d\xc9\xcc\xcd\xb7\xb5\x34\x96\xa9\xac\xd2\x44\xa7\x11\x0e\xd7\xf5\xad\xdf\xea\x16\x00\x00\xff\xff\x6e\x72\x6c\x02\x24\x01\x00\x00")

func resources_ddl_insert_stations_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_stations_sql,
		"resources/ddl/insert-stations.sql",
	)
}

func resources_ddl_insert_stations_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_stations_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-stations.sql", size: 292, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_stop_times_full_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\x4d\x92\xa3\x30\x0c\x85\xd7\x70\x0a\x6f\xba\x7a\x93\xe2\x06\x39\x0b\x78\x8c\x00\x4f\x1c\x8b\x91\x44\x66\x32\xa7\x6f\x01\x31\x06\x2a\x95\xac\xfc\x3e\xf4\xa4\xe8\xc7\x47\x06\x12\xe3\xa3\xa0\x69\x7a\xe9\xb8\xfe\xe2\xa6\x6a\x58\x70\xac\xc5\xdf\x81\xeb\x6e\x0a\xa1\x29\x19\x02\x38\x31\xa5\xd1\x1f\x57\xcb\x67\xdf\x5e\xf6\xd2\x61\x0b\x07\x10\xed\xfd\x08\x5a\x60\x77\x00\xc1\xca\x51\x63\x3c\xe8\x1e\x30\xe9\xff\x18\xe1\x5c\x71\xa2\x90\x74\x40\x67\xc5\x63\xac\xe5\x39\x6e\x45\x47\x4b\x10\xa5\x66\x59\x3e\x5d\xca\x82\xa5\xb2\x44\xfe\x61\xc3\xd2\xdb\x2b\x4e\xaa\x16\x34\x54\x26\x82\x23\x5e\x8a\x30\xfc\x99\x20\xba\x13\x1d\xc0\xb6\x35\xfb\x3e\x6e\x78\xf4\xee\x36\x8d\xfb\xfa\x9a\x97\x34\x14\xbb\x6e\x47\xd5\x0f\xf4\xf0\x2e\x37\x23\x95\x90\x5f\xa7\x59\xbc\xde\x73\xf6\x9c\x5c\xf3\x78\xd2\xe1\xcf\xed\x65\xd3\x2f\x6d\xf9\xb6\xd3\x3c\xd8\x31\x27\xa5\xca\xf6\xfa\xaf\x9f\x3b\x40\x38\xc9\x1a\x50\x24\xc1\x03\x92\xec\xf6\x94\xb8\xee\xa1\x7f\x83\xf3\xfe\x12\xc9\x7d\x25\xb2\xed\x24\x01\x87\x01\xe9\xe4\x82\x7f\xb2\xf2\xb2\x23\xbc\x9b\xb2\x38\x5d\x1e\x37\x86\xf5\x24\x23\x90\xf9\x8d\x3e\x2e\xe6\xb7\xc7\xa9\x71\x62\x30\xe6\x8b\xbc\xa6\x05\xf9\xf6\x43\x82\x79\xc8\xea\x5d\xad\xdb\xfc\xaf\xdb\xeb\x83\x75\xe9\x40\xbd\x34\x7b\xf3\x50\xd5\x9b\x9e\xe5\xdf\x01\x08\xde\x0d\xf9\xfa\xfd\xf5\xf8\xfe\x09\x00\x00\xff\xff\x78\x47\xcb\x8f\x71\x03\x00\x00")

func resources_ddl_insert_stop_times_full_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_stop_times_full_sql,
		"resources/ddl/insert-stop_times_full.sql",
	)
}

func resources_ddl_insert_stop_times_full_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_stop_times_full_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-stop_times_full.sql", size: 881, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_routes_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd1\x41\x4b\xc3\x30\x14\x07\xf0\x7b\x3f\xc5\xbb\x08\x0d\x88\x50\xa9\x32\x90\x1d\xb2\xed\xa9\xc5\x5a\xa5\x76\x87\x9d\x9a\x9a\x65\xdd\xa0\x4b\x24\x79\x95\xed\xdb\xbb\x32\x30\xe2\x08\x14\x72\x49\xfe\xbf\x84\xc7\x3f\xf3\x12\x79\x85\x50\xf1\x59\x8e\x20\x5a\xda\xb8\xfa\xca\x89\x1b\x61\x4d\x4f\xca\x09\x88\x23\x80\xf3\xa6\xde\xad\x05\xec\x34\xc5\x49\xc2\xa0\x78\xab\xa0\x58\xe6\xf9\xf5\x10\x37\xad\xd2\xf2\x18\xce\xcf\xd7\xdd\xd6\x58\xaa\x75\xb3\x57\x02\xbe\x1b\x2b\xb7\x8d\x8d\xd3\x3b\x06\x0b\x7c\xe4\xcb\xfc\x82\x77\x46\xb7\xff\x74\x72\x3b\x09\xf2\xb5\x72\xd2\xcb\xfb\x34\x08\xe9\xf8\xa5\xfc\x9c\x01\xd4\xdb\x6e\xd4\x90\xd2\x74\xc6\x8e\x92\xa4\x0e\x34\x86\xbf\x97\xd9\x2b\x2f\x57\xf0\x82\x2b\x88\x7d\xf1\x6c\xc8\x86\x33\x5f\xf6\x69\x1d\x4e\xff\xf3\xa7\x7d\x16\x31\xc0\xe2\x29\x2b\x70\x9a\x69\x6d\x16\xb3\xdf\xd7\xe7\xcf\xbc\xfc\xc0\x6a\xda\xd3\x66\xb2\xff\x4c\x1f\xa2\x9f\x00\x00\x00\xff\xff\x70\x89\xe4\x6a\xf7\x01\x00\x00")

func resources_ddl_routes_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_routes_sql,
		"resources/ddl/routes.sql",
	)
}

func resources_ddl_routes_sql() (*asset, error) {
	bytes, err := resources_ddl_routes_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/routes.sql", size: 503, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_select_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x4e\xcd\x49\x4d\x2e\x51\xc8\xcd\xcc\xd3\x28\xd6\x4b\x28\x2e\xc9\x2f\x88\xcf\x49\x2c\x49\xd0\xd4\x51\xc8\x4d\xac\xc0\x10\x42\x56\x95\x9f\x87\xa1\x0a\x24\xa4\x90\x56\x94\x9f\xab\x90\x90\x5e\x92\x56\x1c\xaf\x5a\x9c\x00\x91\x2a\x4e\x50\x28\x06\x04\x00\x00\xff\xff\x27\xdf\x80\x60\x6a\x00\x00\x00")

func resources_ddl_select_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_select_agency_zone_sql,
		"resources/ddl/select-agency-zone.sql",
	)
}

func resources_ddl_select_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_select_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/select-agency-zone.sql", size: 106, mode: os.FileMode(420), modTime: time.Unix(1421874419, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stop_times_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8f\x41\x4b\x03\x31\x10\x46\xef\xfb\x2b\xe6\x22\x6c\x41\x84\x82\x87\x82\xf4\x90\xb6\x51\x0b\x21\x42\x4d\xcf\x99\xb8\x49\xda\xa0\xcd\xc6\x49\x52\xf0\xdf\xdb\xee\x41\x3d\xac\x7b\xc9\xe5\xbd\xbc\x8f\x59\xef\x38\x53\x1c\x14\x5b\x09\x0e\x78\x28\x3e\xeb\x9b\x8c\x77\x98\x4b\x9f\x74\x09\x27\x97\x11\xda\x06\x00\x0b\x85\xa4\x83\x45\x08\xb1\xb4\xf3\xf9\x0c\xe4\x8b\x02\xb9\x17\xe2\xf6\x4a\x0d\x51\x38\x9b\x8f\xe1\x07\xc2\xf5\x85\x0d\x7f\x64\x7b\xf1\xc7\xb1\x2e\x19\x2a\x95\xdc\xa4\x35\x0c\xff\xbb\x33\xd0\xec\x3e\xab\x8b\x9d\xfb\x75\xc6\x2b\x47\x67\xac\xce\xe1\x10\x11\xce\x86\xba\xa3\xa1\x76\x31\xe2\xa6\xd0\xbd\xd7\xcb\xb1\x5f\x69\xaa\x68\xe9\x52\xec\xbd\x9f\xf0\x9a\x19\x70\xf9\xb4\x95\x7c\xb9\x8d\xb1\xdf\xac\x7e\xe0\xfa\x99\xed\x5e\xb9\x5a\xd6\xe2\x17\xa7\xb7\xfb\x87\xe6\x3b\x00\x00\xff\xff\xc4\x47\xdc\x13\x76\x01\x00\x00")

func resources_ddl_stop_times_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stop_times_sql,
		"resources/ddl/stop_times.sql",
	)
}

func resources_ddl_stop_times_sql() (*asset, error) {
	bytes, err := resources_ddl_stop_times_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stop_times.sql", size: 374, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stop_times_indexes_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\x2e\xc9\x2f\x88\x2f\xc9\xcc\x4d\x2d\x4e\xe0\xd2\xd5\x55\x00\x02\x47\x17\x17\x85\x80\x20\x4f\x5f\xc7\xa0\x48\x05\x6f\xd7\x48\x05\x8d\x84\x92\xa2\xcc\x82\xf8\xcc\x94\x04\x1d\x05\x88\x72\x20\x53\x53\x87\x0b\xa6\xd6\xd3\xcf\xc5\x35\x42\x01\xa6\x08\x88\x2a\x12\x90\xf4\x28\x38\x06\x3b\x63\x2a\x86\x1a\x03\x53\x0c\x33\x15\xac\xd8\x9a\x0b\x10\x00\x00\xff\xff\xf7\xd8\xdd\x4c\xab\x00\x00\x00")

func resources_ddl_stop_times_indexes_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stop_times_indexes_sql,
		"resources/ddl/stop_times_indexes.sql",
	)
}

func resources_ddl_stop_times_indexes_sql() (*asset, error) {
	bytes, err := resources_ddl_stop_times_indexes_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stop_times_indexes.sql", size: 171, mode: os.FileMode(420), modTime: time.Unix(1424983527, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xd1\x51\x4b\xc3\x30\x10\x07\xf0\xf7\x7e\x8a\x7b\x11\x5a\x10\xa1\x52\x65\x20\x7b\xc8\xb6\xdb\x2c\x66\xad\xd4\xec\x61\x4f\x4d\x6c\xb3\x59\xe8\x92\x92\xdc\x04\xfd\xf4\x4a\x1f\x3a\x71\x74\x7b\x0b\xe4\x77\xc7\xfd\xef\xe6\x05\x32\x81\x20\xd8\x8c\x23\xc8\x3d\xed\x7c\x79\xe3\xe5\x9d\xf4\x64\x3b\x2f\x21\x0c\x00\xfa\x77\xd9\xd4\x12\x1a\x43\x61\x1c\x47\x90\xe5\x02\xb2\x0d\xe7\xb7\xc3\x6f\x65\x6b\x2d\xe1\x53\xb9\xea\x43\xb9\x30\x79\x88\x60\x81\x4b\xb6\xe1\xff\x9d\x51\x87\x3f\xee\x31\x19\x73\xb5\xf6\xd5\xc9\xc5\xf7\x93\x31\xd8\x2a\x92\xb0\xe4\x39\x13\x63\xc0\x9a\xcb\x60\xaf\xad\x84\x15\xe6\x6b\x14\xc5\xf6\xdc\x7c\x5b\xa3\xfb\xf0\xd7\xc3\x1d\x5d\x7b\x85\xb5\xb6\x52\xd4\x58\x53\xd2\x57\xa7\x4f\xfb\x3c\x73\x9d\x72\xda\x50\xe9\xa9\xd7\x97\x9b\xbe\x16\xe9\x9a\xfd\x4e\xfe\x82\x5b\x08\x87\x5b\x45\x41\x04\x98\xad\xd2\x0c\xa7\xa9\x31\x76\x31\x1b\xea\xe6\xcf\xac\x78\x43\x31\x3d\xd2\x6e\x72\x78\x4f\x9e\x82\x9f\x00\x00\x00\xff\xff\x2e\x73\xa6\xe7\x03\x02\x00\x00")

func resources_ddl_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stops_sql,
		"resources/ddl/stops.sql",
	)
}

func resources_ddl_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stops.sql", size: 515, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_transfers_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8f\x31\x4f\xc3\x30\x10\x85\xf7\xfc\x8a\x5b\x50\x13\x29\x45\x54\x2a\x12\x12\xea\xe0\xb6\x07\x44\x84\x80\x82\x3b\x74\xf2\x05\xa8\xc1\x83\xed\xca\x36\x08\xfe\x3d\x04\x91\xda\xe9\x84\x74\xe3\xf7\xbd\xf7\x6e\xd5\x22\xe3\x08\x9c\x2d\x6b\x04\x7a\x0d\xd2\x8b\x13\x4f\xa7\x14\x5c\x67\xbc\xdc\x39\x4f\x90\x67\x00\x24\x9d\xd5\xc2\x07\xbb\x17\xea\x85\xe0\xa3\x73\xcf\x6f\x9d\xcb\xe7\xe7\x05\x34\xf7\x1c\x9a\x4d\x5d\x97\x3d\x16\xec\x7f\xa0\xbf\x6c\x11\xbe\xf6\x3b\x02\x65\x42\x3e\x9b\x45\x06\xd6\x78\xc5\x36\x35\x87\xc9\xd9\xe4\x97\xd7\xca\x88\xe8\x28\x9d\x38\x03\x3a\x64\x4f\xa7\xf0\xd0\x56\x77\xac\xdd\xc2\x2d\x6e\x21\x1f\xef\x2e\xd3\x7d\xe5\xd1\x8e\xa2\xf7\x7b\x69\xe4\xfc\xdc\x27\x1d\xe7\x44\x34\xe6\x0d\x60\xd2\x90\x60\x69\xd3\x81\x1c\xd7\x67\x59\x01\xd8\x5c\x57\x0d\x2e\x2a\x63\xec\x7a\x79\x78\x6e\x75\xc3\xda\x47\xe4\x8b\xf7\x20\x2f\xf4\xd3\xfc\x32\xfb\x0e\x00\x00\xff\xff\xb9\x0a\x41\x26\xb5\x01\x00\x00")

func resources_ddl_transfers_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_transfers_sql,
		"resources/ddl/transfers.sql",
	)
}

func resources_ddl_transfers_sql() (*asset, error) {
	bytes, err := resources_ddl_transfers_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/transfers.sql", size: 437, mode: os.FileMode(420), modTime: time.Unix(1424983527, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_trips_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\xc1\x4a\x03\x31\x10\x86\xef\xfb\x14\x73\x11\x36\x20\x42\xa1\x82\x20\x3d\xa4\xed\xa8\x8b\x6b\x94\x98\x1e\x7a\x6a\xd2\x6c\xda\x0d\x6a\x52\x92\xb4\xf8\xf8\x36\x82\xbb\x95\x42\x17\xe6\x34\xff\xc7\xcf\xcc\x37\xe3\x48\x05\x82\xa0\xd3\x1a\x41\x6e\xd3\x26\xae\xae\xa2\xbc\x91\x29\xd8\x5d\x94\x50\x16\x00\x32\xf8\x7d\x32\x2b\xdb\x48\xb0\x2e\x95\xa3\x11\x01\xf6\x2a\x80\x2d\xea\xfa\x3a\xc7\xd1\x84\x83\xd5\x17\x80\xdc\x35\x90\xb6\x46\x35\xd1\x6e\x9d\x84\x83\x0a\xba\x55\xa1\x1c\xdf\x12\x98\xe3\x03\x5d\xd4\x27\x6c\x63\x83\xd1\xc9\x7a\xf7\xaf\xee\x0c\x5b\x7f\x7a\xfd\xf1\x8b\x5c\x6c\x8b\xad\xda\x99\x41\xec\x8d\x57\x2f\x94\x2f\xe1\x19\x97\x50\x76\xbf\x90\x1c\xe5\x55\x67\xe7\x38\xdf\x47\x61\xbd\xad\x1e\xe9\x0d\xfd\x41\x27\xce\x48\x41\x00\xd9\x63\xc5\x70\x52\x39\xe7\xe7\xd3\xee\x82\xd9\x13\xe5\xef\x28\x26\xfb\xb4\xb9\xfb\x5a\x8f\xef\x8b\x9f\x00\x00\x00\xff\xff\x39\x98\x6e\x70\xad\x01\x00\x00")

func resources_ddl_trips_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_trips_sql,
		"resources/ddl/trips.sql",
	)
}

func resources_ddl_trips_sql() (*asset, error) {
	bytes, err := resources_ddl_trips_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/trips.sql", size: 429, mode: os.FileMode(420), modTime: time.Unix(1425069967, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_update_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x2d\x48\x49\x2c\x49\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x48\x4c\x4f\xcd\x4b\xce\x4c\x2d\x4e\x50\x28\x4e\x2d\x51\x80\x70\x2b\xe3\x73\x33\xf3\xe2\x73\x12\x4b\x12\x6c\xed\x75\x10\x62\x89\x15\x98\x62\x20\x75\xf9\x79\x98\xea\xc0\x62\x5c\x80\x00\x00\x00\xff\xff\x6c\xbd\xa7\x65\x6f\x00\x00\x00")

func resources_ddl_update_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_update_agency_zone_sql,
		"resources/ddl/update-agency-zone.sql",
	)
}

func resources_ddl_update_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_update_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/update-agency-zone.sql", size: 111, mode: os.FileMode(420), modTime: time.Unix(1421882826, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_update_gtfs_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x2d\x48\x49\x2c\x49\x55\x48\x48\x2f\x49\x2b\x4e\xd0\x4b\x48\x4c\x4f\xcd\x4b\xce\x4c\x2d\x4e\x50\x28\x4e\x2d\x51\x80\x70\x2b\xe3\x73\x33\xf3\xe2\x73\x12\x4b\x12\x6c\xed\x75\x10\x62\x89\x15\x98\x62\x20\x75\xf9\x79\x98\xea\xc0\x62\x0a\xe5\x19\xa9\x45\xa9\x70\x89\xec\xd4\x4a\xa0\x20\x17\x20\x00\x00\xff\xff\x86\xf4\xa1\xf0\x81\x00\x00\x00")

func resources_ddl_update_gtfs_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_update_gtfs_agency_zone_sql,
		"resources/ddl/update-gtfs-agency-zone.sql",
	)
}

func resources_ddl_update_gtfs_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_update_gtfs_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/update-gtfs-agency-zone.sql", size: 129, mode: os.FileMode(420), modTime: time.Unix(1421882593, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/ddl/agencies.sql": resources_ddl_agencies_sql,
	"resources/ddl/calendar_dates.sql": resources_ddl_calendar_dates_sql,
	"resources/ddl/calendars.sql": resources_ddl_calendars_sql,
	"resources/ddl/create-table-line_stops.sql": resources_ddl_create_table_line_stops_sql,
	"resources/ddl/create-table-lines.sql": resources_ddl_create_table_lines_sql,
	"resources/ddl/create-table-route_stops.sql": resources_ddl_create_table_route_stops_sql,
	"resources/ddl/create-table-station_lines.sql": resources_ddl_create_table_station_lines_sql,
	"resources/ddl/create-table-station_stops.sql": resources_ddl_create_table_station_stops_sql,
	"resources/ddl/create-table-stations.sql": resources_ddl_create_table_stations_sql,
	"resources/ddl/create-table-stop_times_full.sql": resources_ddl_create_table_stop_times_full_sql,
	"resources/ddl/insert-line_stops.sql": resources_ddl_insert_line_stops_sql,
	"resources/ddl/insert-lines.sql": resources_ddl_insert_lines_sql,
	"resources/ddl/insert-route_stops.sql": resources_ddl_insert_route_stops_sql,
	"resources/ddl/insert-station_lines.sql": resources_ddl_insert_station_lines_sql,
	"resources/ddl/insert-station_stops.sql": resources_ddl_insert_station_stops_sql,
	"resources/ddl/insert-stations.sql": resources_ddl_insert_stations_sql,
	"resources/ddl/insert-stop_times_full.sql": resources_ddl_insert_stop_times_full_sql,
	"resources/ddl/routes.sql": resources_ddl_routes_sql,
	"resources/ddl/select-agency-zone.sql": resources_ddl_select_agency_zone_sql,
	"resources/ddl/stop_times.sql": resources_ddl_stop_times_sql,
	"resources/ddl/stop_times_indexes.sql": resources_ddl_stop_times_indexes_sql,
	"resources/ddl/stops.sql": resources_ddl_stops_sql,
	"resources/ddl/transfers.sql": resources_ddl_transfers_sql,
	"resources/ddl/trips.sql": resources_ddl_trips_sql,
	"resources/ddl/update-agency-zone.sql": resources_ddl_update_agency_zone_sql,
	"resources/ddl/update-gtfs-agency-zone.sql": resources_ddl_update_gtfs_agency_zone_sql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"resources": &_bintree_t{nil, map[string]*_bintree_t{
		"ddl": &_bintree_t{nil, map[string]*_bintree_t{
			"agencies.sql": &_bintree_t{resources_ddl_agencies_sql, map[string]*_bintree_t{
			}},
			"calendar_dates.sql": &_bintree_t{resources_ddl_calendar_dates_sql, map[string]*_bintree_t{
			}},
			"calendars.sql": &_bintree_t{resources_ddl_calendars_sql, map[string]*_bintree_t{
			}},
			"create-table-line_stops.sql": &_bintree_t{resources_ddl_create_table_line_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-lines.sql": &_bintree_t{resources_ddl_create_table_lines_sql, map[string]*_bintree_t{
			}},
			"create-table-route_stops.sql": &_bintree_t{resources_ddl_create_table_route_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-station_lines.sql": &_bintree_t{resources_ddl_create_table_station_lines_sql, map[string]*_bintree_t{
			}},
			"create-table-station_stops.sql": &_bintree_t{resources_ddl_create_table_station_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-stations.sql": &_bintree_t{resources_ddl_create_table_stations_sql, map[string]*_bintree_t{
			}},
			"create-table-stop_times_full.sql": &_bintree_t{resources_ddl_create_table_stop_times_full_sql, map[string]*_bintree_t{
			}},
			"insert-line_stops.sql": &_bintree_t{resources_ddl_insert_line_stops_sql, map[string]*_bintree_t{
			}},
			"insert-lines.sql": &_bintree_t{resources_ddl_insert_lines_sql, map[string]*_bintree_t{
			}},
			"insert-route_stops.sql": &_bintree_t{resources_ddl_insert_route_stops_sql, map[string]*_bintree_t{
			}},
			"insert-station_lines.sql": &_bintree_t{resources_ddl_insert_station_lines_sql, map[string]*_bintree_t{
			}},
			"insert-station_stops.sql": &_bintree_t{resources_ddl_insert_station_stops_sql, map[string]*_bintree_t{
			}},
			"insert-stations.sql": &_bintree_t{resources_ddl_insert_stations_sql, map[string]*_bintree_t{
			}},
			"insert-stop_times_full.sql": &_bintree_t{resources_ddl_insert_stop_times_full_sql, map[string]*_bintree_t{
			}},
			"routes.sql": &_bintree_t{resources_ddl_routes_sql, map[string]*_bintree_t{
			}},
			"select-agency-zone.sql": &_bintree_t{resources_ddl_select_agency_zone_sql, map[string]*_bintree_t{
			}},
			"stop_times.sql": &_bintree_t{resources_ddl_stop_times_sql, map[string]*_bintree_t{
			}},
			"stop_times_indexes.sql": &_bintree_t{resources_ddl_stop_times_indexes_sql, map[string]*_bintree_t{
			}},
			"stops.sql": &_bintree_t{resources_ddl_stops_sql, map[string]*_bintree_t{
			}},
			"transfers.sql": &_bintree_t{resources_ddl_transfers_sql, map[string]*_bintree_t{
			}},
			"trips.sql": &_bintree_t{resources_ddl_trips_sql, map[string]*_bintree_t{
			}},
			"update-agency-zone.sql": &_bintree_t{resources_ddl_update_agency_zone_sql, map[string]*_bintree_t{
			}},
			"update-gtfs-agency-zone.sql": &_bintree_t{resources_ddl_update_gtfs_agency_zone_sql, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

