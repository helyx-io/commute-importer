package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _resources_ddl_agencies_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xd1\x41\x4b\xc3\x30\x14\xc0\xf1\x7b\x3f\xc5\xbb\x08\x2d\x88\xa7\x09\x82\xec\x90\x6d\x4f\x2d\xb6\x71\x64\xe9\x61\xa7\x26\xb6\x69\x2d\xb4\xaf\x92\xa6\xa2\x7e\x7a\x57\x85\x59\x11\x25\xec\x96\xc0\xef\xfd\x43\x92\xb5\x40\x26\x11\x24\x5b\x25\x08\xaa\x76\xd5\x90\x9f\x0d\xea\x42\xe9\xda\x50\xd1\x98\x41\x41\x18\x00\x7c\x6d\xdf\xf2\xa6\x54\xf0\xa2\x6d\xf1\xa4\x6d\xb8\xb8\x8c\x80\x3f\x48\xe0\x59\x92\x9c\xcf\x0c\xe9\xce\xfc\x54\x1b\xbc\x61\x59\xf2\x5b\x8e\xb6\xf5\x83\xae\xe9\xcc\x7b\x4f\x9e\xd9\x56\x53\xed\x27\xbb\x86\x0e\xda\x29\xa8\xda\x5e\xbb\xbf\x99\x7e\xf5\x62\x53\xad\x27\xaf\xda\x3f\xac\xb0\x46\x3b\x53\xe6\xd3\x81\xe5\x61\x35\x5d\xfe\xf8\xd0\x47\xbe\xce\x84\x40\x2e\x73\x19\xa7\xb8\x93\x2c\xdd\x7e\xce\x8e\xcf\xe5\xa9\xb3\x5b\x11\xa7\x4c\xec\xe1\x1e\xf7\x10\xce\xfe\x3b\x0a\x22\x40\x7e\x1b\x73\x5c\xc6\x44\xfd\x66\xf5\x9d\xb9\x63\x62\x87\x72\x39\xba\xea\xaa\x7b\x5c\x5c\x07\x1f\x01\x00\x00\xff\xff\xfe\x36\x68\x61\x4c\x02\x00\x00")

func resources_ddl_agencies_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_agencies_sql,
		"resources/ddl/agencies.sql",
	)
}

func resources_ddl_agencies_sql() (*asset, error) {
	bytes, err := resources_ddl_agencies_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/agencies.sql", size: 588, mode: os.FileMode(420), modTime: time.Unix(1421882968, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_calendar_dates_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\x41\x4b\x03\x31\x10\x46\xef\xfb\x2b\xe6\x22\xec\x42\x11\x0a\x15\x04\xe9\x21\x6d\x47\x5d\xdc\x8d\x25\xcd\x1e\x7a\x4a\x62\x92\x6a\xc0\xa6\x4b\x32\x2d\xfa\xef\xed\xaa\xd8\x7a\xed\x65\x0e\xc3\x7b\x0f\xbe\xb9\x40\x26\x11\x24\x9b\x35\x08\xfa\x95\x36\x59\x5d\x65\x7d\xad\xad\x79\xf7\xd1\x99\xa4\x9c\x21\x9f\x35\x94\x05\x80\xce\x3e\x1d\x82\xf5\x2a\x38\x0d\x07\x93\xec\x9b\x49\xe5\xe4\xa6\x02\xfe\x2c\x81\x77\x4d\x33\x1a\xa0\x41\xd0\x30\xdc\xff\x7f\xff\x61\x7d\x4f\x61\x17\x15\x7d\xf6\x47\x22\x44\x2a\xc7\xe3\x0a\x16\x78\xcf\xba\xe6\x0c\xb4\xc9\x1f\x65\xa7\x0c\xfd\x64\x28\x6c\x4f\xa9\x3f\x7c\xde\x09\x81\x5c\x2a\x59\xb7\xb8\x92\xac\x5d\x7e\xbb\xfb\xde\x5d\xea\x2e\x45\xdd\x32\xb1\x86\x27\x5c\x43\x79\x3e\x75\xf4\xbb\xa9\x2a\x2a\x40\xfe\x50\x73\x9c\xd6\x31\xee\x16\xb3\x53\xef\x91\x89\x15\xca\xe9\x9e\x36\xb7\xdb\x97\xc9\x5d\xf1\x15\x00\x00\xff\xff\x3c\x67\xec\xbb\x56\x01\x00\x00")

func resources_ddl_calendar_dates_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_calendar_dates_sql,
		"resources/ddl/calendar_dates.sql",
	)
}

func resources_ddl_calendar_dates_sql() (*asset, error) {
	bytes, err := resources_ddl_calendar_dates_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/calendar_dates.sql", size: 342, mode: os.FileMode(420), modTime: time.Unix(1422144414, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_calendars_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x4d\x4b\xc3\x40\x10\x86\xef\xfd\x15\x73\x11\x12\x10\x41\xa8\x20\x48\x0f\x69\xbb\x6a\x30\x8d\x25\xdd\x1e\x7a\xca\xae\xc9\xd6\x06\x6c\x2a\xbb\xb3\xd5\xfe\x7b\x13\xbb\x5f\x20\x18\xf1\x92\xc3\xbc\xcf\x2c\xbc\x93\x67\x56\x90\x84\x12\xa0\xc9\x34\x23\xc0\x5e\x71\xab\xca\x0b\xc5\xae\x58\xc5\xdf\x44\x5b\x73\xa9\x18\x44\x23\x00\xa6\x84\x3c\x36\x95\x28\x9b\x9a\xc1\x91\xcb\x6a\xc7\x65\x34\xbe\x89\x21\x7f\xa6\x90\xaf\xb3\xec\xb2\x87\xf6\x87\x6e\xe5\xc4\x00\x9b\xf6\xd4\xb4\x18\x5d\xc7\x30\x27\xf7\xc9\x3a\x0b\x18\xd4\x42\x0d\x42\x1f\xa2\x6e\xff\x80\xe1\x4e\xcb\x61\x6a\x2b\x9b\x41\x46\x71\xd4\x72\x98\xd2\xc3\xfd\x14\x72\x89\x65\xcd\x51\x30\xe8\xbf\x3f\x89\xee\xae\xbf\xe6\x95\x14\xdd\xbc\x2e\x39\x9e\x09\x6c\xf6\xc2\xdd\xd9\xe1\xb3\x75\x51\x90\x9c\x96\x34\x5d\x90\x15\x4d\x16\xcb\xef\x5d\xfd\x5e\xff\x77\x77\x59\xa4\x8b\xa4\xd8\xc0\x13\xd9\x40\x14\xfe\xef\xb8\x4f\xfb\x69\xd0\xad\x9b\x7f\xb2\x1e\xf3\x6d\x3d\x66\x0b\x5a\xc8\x15\xf6\xc8\xd9\x14\x0b\x18\x6f\x7c\x6c\x24\xb1\xb9\x75\xc6\x03\x4e\x10\x8b\x78\x63\x82\x57\x8c\x1e\xee\x19\xab\x8b\x47\xce\x6e\x58\xc0\x98\x12\x14\x36\x5a\xb8\xba\x56\x93\x00\xd1\x61\x13\x63\x48\x3c\x8a\x81\xe4\x0f\x69\x4e\x26\x69\xdb\x1e\xe6\x53\x7f\xfa\xc7\xa4\x58\x11\x3a\xd1\xb8\xbd\xdd\xbf\x8c\xef\x46\x5f\x01\x00\x00\xff\xff\x58\x7a\xd7\x5a\x81\x03\x00\x00")

func resources_ddl_calendars_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_calendars_sql,
		"resources/ddl/calendars.sql",
	)
}

func resources_ddl_calendars_sql() (*asset, error) {
	bytes, err := resources_ddl_calendars_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/calendars.sql", size: 897, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_line_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xcf\x41\x4b\xc3\x30\x14\x07\xf0\x7b\x3f\xc5\xbb\x08\x2d\x0c\x61\x30\x41\x90\x1d\xb2\xed\xa9\xc5\x36\x8e\xec\xf5\xb0\x53\x53\x9b\x6c\x06\x5c\x3a\x92\x4c\xfc\xf8\x2e\xd3\x65\x1e\xc4\x83\x90\x43\xc8\xfb\xfd\xc3\xfb\xcf\x05\x32\x42\x20\x36\xab\x10\xe4\x36\x6c\x7c\x7b\xe5\xe5\xb5\x7c\x33\x56\xb7\x3e\x0c\x7b\x2f\x21\xcf\x00\xbe\x1e\x8c\x92\x60\x6c\xd0\x5b\xed\xf2\xf1\xb8\x00\xfe\x4c\xc0\x9b\xaa\x1a\x45\x11\xf5\x49\xbc\x77\xae\x7f\xed\x5c\x3e\xb9\xf9\x4d\xf4\x83\xd2\x7f\x98\xde\xe9\x2e\x68\xd5\x76\x41\x82\x3a\xde\x82\xd9\xe9\x24\x60\x81\xf7\xac\xa9\x08\xe6\x8d\x10\xc8\xa9\xa5\xb2\xc6\x15\xb1\x7a\x79\xca\x1e\xf6\xea\xbf\xd9\xa5\x28\x6b\x26\xd6\xf0\x84\x6b\xc8\x53\xd9\x51\x2a\x55\x44\x14\x87\xe7\xd9\xf1\x7c\xc8\x1f\xf4\x02\xbe\x23\x67\x90\x7e\xc8\x0a\x40\xfe\x50\x72\x9c\x96\xd6\x0e\x8b\xd9\x65\xa1\x47\x26\x56\x48\xd3\x43\xd8\xdc\xee\x5e\x26\x77\xd9\x67\x00\x00\x00\xff\xff\xb3\x95\x47\xe4\x95\x01\x00\x00")

func resources_ddl_create_table_line_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_line_stops_sql,
		"resources/ddl/create-table-line_stops.sql",
	)
}

func resources_ddl_create_table_line_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_line_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-line_stops.sql", size: 405, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\x41\x4b\x03\x31\x10\x85\xef\xfb\x2b\xe6\x22\xec\x82\x08\x85\x0a\x82\xf4\x90\xb6\xa3\x06\x77\xd3\x92\xce\x1e\x7a\xca\xc4\x6e\x5a\x17\xdc\x28\xbb\xa9\xf8\xf3\x4d\x03\x36\x77\x6f\x8f\x97\xf7\xbd\xcc\x5b\x69\x14\x84\x40\x62\x59\x23\xf0\x29\x1c\x27\x73\x33\xf1\x1d\x7f\xf4\xde\x4d\x0c\x65\x01\x90\xb4\xe9\x3b\x86\xde\x07\x77\x72\x63\x39\x9b\x55\xa0\x36\x04\xaa\xad\x6b\x10\x2d\x6d\x8c\x54\xb1\xa8\x41\x45\xb7\x57\xc0\xdb\xc1\x31\x7c\xdb\xf1\xf0\x6e\xc7\x72\x7e\x9f\x91\x94\x39\x8c\xce\x06\xd7\x19\x1b\x18\xba\xa8\x42\x3f\xb8\x5c\xba\xc6\x27\xd1\xd6\x04\xab\x56\xeb\xd8\x6a\x48\x36\xb8\x23\xd1\x6c\x13\x7b\xfe\xea\xfe\xcb\x6e\xb5\x6c\x84\xde\xc3\x2b\xee\xa1\xbc\x2e\xab\x2e\x4f\x17\x2b\x9f\x1e\xed\x1f\xfe\x8b\xa4\x2d\x55\x51\x01\xaa\x67\xa9\x70\x21\xbd\xff\x5c\x2f\xf3\x4f\x2f\x42\xef\x90\x16\xe7\x70\x7c\x18\xde\xe6\x8f\xc5\x6f\x00\x00\x00\xff\xff\x97\x42\xf3\x56\x56\x01\x00\x00")

func resources_ddl_create_table_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_lines_sql,
		"resources/ddl/create-table-lines.sql",
	)
}

func resources_ddl_create_table_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-lines.sql", size: 342, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_route_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xcf\x41\x4b\xc3\x30\x14\x07\xf0\x7b\x3f\xc5\xbb\x08\x2d\x0c\x4f\x13\x04\xd9\x21\xdb\x9e\x5a\x6c\xe3\xc8\x5e\x0f\x3b\x25\xb1\xc9\x74\x87\x2d\x23\x49\xc5\x8f\xef\x22\x35\xf5\x24\x22\xe4\x10\xf2\x7e\xff\xf0\xfe\x2b\x81\x8c\x10\x88\x2d\x1b\x04\xf5\x1a\xf7\x41\x5e\x05\x75\xad\xbc\x1b\xa2\x95\x21\xba\x73\x50\x50\x16\x00\xe3\xcb\xc1\x28\x78\xd7\xbe\x7f\xd3\xbe\x9c\xdf\x54\xc0\x9f\x09\x78\xd7\x34\xb3\x44\x12\xff\x83\xe8\x9d\xb1\xbf\x98\xde\x5b\x1d\xad\x91\x3a\x2a\x30\x97\x5b\x3c\x1c\x6d\x16\xb0\xc6\x7b\xd6\x35\x04\xab\x4e\x08\xe4\x24\xa9\x6e\x71\x4b\xac\xdd\x7c\x65\x87\xb3\xf9\x6f\x76\x23\xea\x96\x89\x1d\x3c\xe1\x0e\xca\xa9\xed\x2c\xb7\xaa\x92\x4a\xd3\x3c\xbc\x9c\x0f\xf5\x13\x4f\x64\x0c\x7d\x8b\xfc\x47\x51\x01\xf2\x87\x9a\xe3\xa2\x3e\x9d\xdc\x7a\x39\xed\xf4\xc8\xc4\x16\x69\x31\xc4\xfd\xed\xf1\x65\x7e\x57\x7c\x06\x00\x00\xff\xff\xc2\xa0\x5c\x37\x9a\x01\x00\x00")

func resources_ddl_create_table_route_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_route_stops_sql,
		"resources/ddl/create-table-route_stops.sql",
	)
}

func resources_ddl_create_table_route_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_route_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-route_stops.sql", size: 410, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_station_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\xc1\x4a\x03\x31\x10\x86\xef\xfb\x14\x73\x11\x76\xa1\x08\x05\x0f\x82\xf4\x90\xb6\xa3\x06\xb3\xb1\xa4\xb3\x87\x9e\x92\xd5\xa4\x25\x60\x53\x69\xa6\xe0\xe3\xdb\x88\xee\xd6\x8b\x07\x61\x0e\xc3\xcc\xf7\x0d\xff\x2c\x0c\x0a\x42\x20\x31\x57\x08\x6e\xc7\xdb\x6c\xaf\xb2\xbb\x76\x99\x7b\x8e\x87\x64\xdf\x62\x0a\xd9\x41\x5d\x01\x0c\xb3\xe8\x1d\xc4\xc4\x61\x17\x8e\xf5\x74\xda\x80\x7e\x26\xd0\x9d\x52\x93\x02\x15\xe1\x6f\xe2\xf5\x18\x7a\x0e\xde\xf6\xec\xc0\x9f\x3b\x8e\xfb\x30\x10\xb0\xc4\x7b\xd1\x29\x82\x45\x67\x0c\x6a\xb2\x24\x5b\x5c\x93\x68\x57\x5f\xee\xe9\xdd\xff\xd7\x5d\x19\xd9\x0a\xb3\x81\x27\xdc\x40\x7d\xf9\xcb\x64\x0c\xdd\x14\xb0\x00\x17\xfb\x73\x7d\xb8\xdf\xc6\x88\x7d\x8b\x3f\xcc\x70\xa7\x6a\x00\xf5\x83\xd4\x38\x93\x29\x1d\x96\xf3\x31\xda\xa3\x30\x6b\xa4\xd9\x89\xb7\xb7\xfb\x97\x9b\xbb\xea\x33\x00\x00\xff\xff\xd3\x63\x84\xef\x81\x01\x00\x00")

func resources_ddl_create_table_station_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_station_lines_sql,
		"resources/ddl/create-table-station_lines.sql",
	)
}

func resources_ddl_create_table_station_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_station_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-station_lines.sql", size: 385, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_station_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\xc1\x4a\xc3\x40\x10\x86\xef\x79\x8a\xb9\x08\x09\x14\xa1\x50\x41\x90\x1e\xb6\xed\xa8\xc1\x64\x2d\xdb\xc9\xa1\xa7\xec\xda\x6c\x6b\x0e\xdd\x0d\xbb\x53\xf1\xf1\x6d\xa3\xa4\xd1\xa3\xb0\x87\x65\xfe\xef\x1b\xfe\x59\x2a\x14\x84\x40\x62\x51\x20\xe8\x03\xef\x63\x7d\x13\xf5\xad\x8e\x6c\xb8\xf5\xae\x8e\xec\xbb\xa8\x21\x4d\x00\x86\x59\xdb\x68\x68\x1d\xdb\x83\x0d\xe9\x74\x9a\x81\x7c\x25\x90\x55\x51\x4c\xbe\x21\xdf\xf5\xc4\x87\x09\xbb\x77\x13\xd2\xd9\xdd\x1f\x62\x17\xac\x61\xdb\xd4\x86\x35\x34\xe7\x1f\xb7\x47\x3b\x10\xb0\xc2\x47\x51\x15\x04\xcb\x4a\x29\x94\x54\x53\x5e\xe2\x86\x44\xb9\xee\xdd\x53\xd7\xfc\xd7\x5d\xab\xbc\x14\x6a\x0b\x2f\xb8\x85\x74\x7c\xcb\x64\xe8\x9c\x5d\xb8\x4b\x3e\x8a\xcf\xef\x53\xff\x16\xc6\x58\x2f\x5e\x99\x9f\x3d\x49\x06\x28\x9f\x72\x89\xf3\xdc\x39\xbf\x5a\x5c\x9b\x3d\x0b\xb5\x41\x9a\x9f\x78\x7f\x7f\x7c\x9b\x3d\x24\x5f\x01\x00\x00\xff\xff\x0b\xc0\xeb\xbe\x80\x01\x00\x00")

func resources_ddl_create_table_station_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_station_stops_sql,
		"resources/ddl/create-table-station_stops.sql",
	)
}

func resources_ddl_create_table_station_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_station_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-station_stops.sql", size: 384, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_stations_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\x51\x6b\xbb\x30\x14\xc5\xdf\xfd\x14\xf7\xe5\x0f\x0a\x7f\x06\x85\x32\x06\xa3\x0f\x69\x9b\x6d\x61\x9a\x4a\x8c\x0f\x7d\x32\x59\x8d\x4e\xa8\x71\xc4\xdb\xb1\x7d\xfb\x45\xa1\xa8\x63\x30\xd8\x4b\x48\x72\xcf\xef\xde\x7b\xce\x4e\x50\x22\x29\x48\xb2\x8d\x29\xa8\x1a\xab\xbe\xf8\xd7\xab\x1b\xd5\xa3\xc6\xa6\xb3\xbd\x82\x30\x00\xb8\x3e\x8b\xa6\x54\xd0\x58\x34\xb5\x71\xe1\x6a\x15\x01\x3f\x48\xe0\x79\x1c\x03\xc9\xe5\xa1\x60\xdc\xb7\x4b\x28\x97\xff\xe7\x8c\xd5\xad\x51\xf0\xae\xdd\xe9\x55\xbb\xf0\x76\x3d\x51\x0b\xd9\x59\xa3\x82\xea\xdc\x69\x84\x3d\x7d\x20\x79\xfc\x93\xa6\xb3\xbf\x6a\x6a\xd3\x29\xf0\x47\x6b\xd0\x7d\x2e\x47\x9d\x9c\xd1\x68\xca\x62\x98\x54\xfa\x1b\x36\xad\x99\x2c\x5c\x3b\xee\x72\x21\xbc\x87\x42\xb2\x84\x66\x92\x24\xe9\xc8\x5e\xde\xca\xbf\xb2\xa9\x60\x09\x11\x47\x78\xa6\x47\x08\xe7\x51\x46\x43\x75\xf8\x5d\x64\xe5\x2b\x1f\x6a\x26\x1c\xf3\x1b\xa5\x59\x4a\x24\x23\xf1\x12\xf1\x56\xbf\x13\x43\x04\x51\x10\x01\xe5\x8f\x8c\xd3\x0d\xb3\xb6\xdb\x6f\xa7\x1d\x9f\x88\xc8\xa8\xdc\x5c\xb0\xba\x6b\x5f\xd6\xf7\xc1\x57\x00\x00\x00\xff\xff\xac\xde\xd2\xe3\x04\x02\x00\x00")

func resources_ddl_create_table_stations_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_stations_sql,
		"resources/ddl/create-table-stations.sql",
	)
}

func resources_ddl_create_table_stations_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_stations_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-stations.sql", size: 516, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_stop_times_full_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xd4\x41\x6b\xdb\x30\x14\x07\xf0\x7b\x3f\x85\x2e\x83\x14\xc6\x20\x23\x1b\x85\xd1\x83\xdb\xaa\x5d\xc0\x71\x86\xab\x1c\x76\xb2\x55\xe9\xd9\x11\x75\x24\x4f\x7a\x0a\xeb\x3e\xfd\x1c\x99\xb5\x4d\xe2\x44\x66\x17\x63\xcc\x4f\x0f\x3d\x3d\xfd\x7d\x9b\xd3\x84\x51\xc2\x92\x9b\x94\x92\xb2\xc6\xca\x15\x1f\x5c\xf9\xa9\x74\x68\xda\x02\xd5\x06\x5c\x51\xf9\xa6\x29\xc9\xe4\x82\x90\xfe\xab\x92\x25\xd9\x72\x2b\xd6\xdc\x4e\x66\x5f\x2e\x49\xb6\x64\x24\x5b\xa5\xe9\xc7\x57\x21\x8c\x84\x7d\x73\x47\xef\x93\x55\x7a\xe8\x34\xdf\xbc\x73\x5f\x67\xa7\x9c\x04\x27\xde\xdc\xf4\xf3\xd5\x29\xd8\x70\x2c\xc9\x7d\xba\x4c\xd8\x29\x60\xf4\x79\x50\x83\x29\xc9\x03\x5d\x2e\x28\xcb\x7f\x1e\x9b\x3f\x46\xc3\xd1\x01\x0c\x57\xf2\xb6\x89\xb0\xc6\x08\x8e\xca\xe8\x02\x5f\xda\xee\x1c\x94\xc6\xc9\x74\x3a\xe0\x5a\x6e\x41\x63\xe1\x30\xe8\x48\x51\x6e\xad\xda\xf2\x26\xcc\xae\x24\xbb\xe7\xb1\x91\xd0\x95\x44\x6f\xe1\xac\x0a\x5d\x38\xf8\xe5\x41\x8b\x73\xdb\x0b\x6e\x0d\x5c\x16\x4e\xd5\xef\xb6\x37\x34\xa5\x56\x89\x67\xdf\xc6\x1a\x96\xb6\xab\x68\xaa\x2a\xe6\x1c\xd8\xad\x12\x23\x06\x82\x56\x45\xee\x6d\x10\xbb\x26\xf6\x7b\x18\xac\x26\x95\x05\x11\x06\xb7\x2b\x79\x72\x77\x4f\xdd\x7c\x9f\x47\x5c\x96\x35\x6f\x47\xb4\xc0\xeb\x6e\x0c\x2f\x71\x67\x8d\xc7\x11\xe5\x7a\xe6\xd6\xc6\xe2\x41\x0c\xcf\xf0\x2e\x3d\xf5\x81\x1e\x0e\x63\xcf\xf7\x63\x3b\x18\xef\x1e\x46\xc6\xdc\xa3\x78\x9e\x7a\x27\x4c\x63\xec\x28\x89\xf0\x1b\x47\x71\x61\x81\x23\xc8\x62\xf7\x77\x91\xdd\x5b\xc8\xcb\xbf\xeb\xf3\xca\x6f\x57\x79\x4e\x33\x56\xb0\xf9\x82\x3e\xb2\x64\xf1\x23\xac\xf5\xad\xfc\x9f\xb5\x17\x97\x84\x66\x0f\xf3\x8c\x5e\xcf\xb5\x36\x77\x37\x6f\xf2\x7b\x92\x3f\x52\x76\xed\xb1\xba\xda\x3c\xcd\xbe\xfd\x0d\x00\x00\xff\xff\xb6\xa4\xcd\x71\xc1\x05\x00\x00")

func resources_ddl_create_table_stop_times_full_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_stop_times_full_sql,
		"resources/ddl/create-table-stop_times_full.sql",
	)
}

func resources_ddl_create_table_stop_times_full_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_stop_times_full_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-stop_times_full.sql", size: 1473, mode: os.FileMode(420), modTime: time.Unix(1422144679, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_line_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x51\x4e\xc4\x30\x0c\x44\xbf\x37\xa7\xf0\x0f\x12\x48\x28\x17\x40\x7b\x96\x16\x1a\x2f\x18\xa5\x36\xb2\xcd\x07\xb7\x27\x0e\xd9\x0d\x42\xa8\xfd\x9a\xa9\xfc\x66\xa2\x21\x36\x54\x07\x62\x17\x58\x5f\xfd\x62\xcb\x9d\xad\x79\xad\xc4\xb8\x98\xcb\x87\xad\x70\xdf\x0d\x95\x47\x88\x1f\x53\x6c\x52\xf0\x01\x0c\x2b\x6e\x0e\x85\xcc\x89\x37\x4f\x27\xa8\x79\x02\x79\x22\xf9\x06\xa5\x8b\xca\x9e\x4e\xbf\xea\x46\x93\xb5\x77\x30\x2a\xbc\x0b\x71\x82\xf6\xfd\x39\x59\x9c\x76\x8c\x3b\x07\xe1\x19\x7e\x36\xbf\x4a\x38\x48\x70\xa5\x28\xe9\xac\xe7\x70\x83\x1d\xf2\x88\x55\xf9\xf4\x68\xd6\x1f\xb8\xdb\xa0\xf5\x26\x0f\xe0\x98\xa3\xb1\x35\xd8\x2b\x60\x6f\xa2\xbe\xf0\xf3\x8e\xe7\xb1\x57\xe8\x24\x5a\x5a\xc8\xcb\x57\x8f\xf8\x6f\xc8\xa7\xf4\x1d\x00\x00\xff\xff\xf7\x5c\xdf\xe3\xb2\x01\x00\x00")

func resources_ddl_insert_line_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_line_stops_sql,
		"resources/ddl/insert-line_stops.sql",
	)
}

func resources_ddl_insert_line_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_line_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-line_stops.sql", size: 434, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8c\x31\x0e\xc2\x40\x0c\x04\xfb\x7b\xc5\x36\x48\xd0\xe4\x03\x3c\xe6\x2e\x24\x0e\x58\x4a\x6c\xc9\x5e\x0a\x7e\xcf\x71\x05\xa2\x61\x9b\x6d\x66\x46\x2d\x25\x08\x35\x3a\xda\x9d\x5b\xd6\x53\xb6\xa9\xed\x6a\x92\x0d\xe7\xcf\x57\x9b\x0f\xb9\x20\x65\x97\x85\x58\x35\xa9\xb6\xb0\xa0\x2f\xa6\xf0\x27\xa5\xe6\xc3\x83\x83\xc3\x9c\xf8\x4a\x65\x0b\x3f\x06\xf8\x93\x1e\x46\x6f\x47\xf1\x58\x25\x70\x7b\xfd\x49\x5d\xcb\x3b\x00\x00\xff\xff\x0f\x00\x83\x13\x9d\x00\x00\x00")

func resources_ddl_insert_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_lines_sql,
		"resources/ddl/insert-lines.sql",
	)
}

func resources_ddl_insert_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-lines.sql", size: 157, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_route_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8f\x41\xae\xc2\x30\x0c\x44\xf7\x3d\x85\x37\x5f\xfa\x48\x28\x17\x40\x3d\x4b\x23\x35\x2e\x32\xa2\x31\xb2\x87\xfb\x93\xb4\xb4\xe9\x02\xe8\xa2\xb2\xa3\x79\x79\x19\xc9\xce\x06\x92\x0c\xa5\x78\xc5\xe4\xc3\x9f\xc7\x10\x4d\x9f\xe0\xc1\xa1\x0f\x8f\xf4\xbf\x6e\x92\xce\x54\x4f\xda\x30\x6a\xe2\x13\x39\xdf\x79\x04\x25\x71\x48\x1e\xd1\x51\xf9\x2c\x1c\x98\xd0\xa8\xb0\x73\xdd\x64\x3a\x2f\xd9\x83\xf6\x2d\xf4\xf2\x9e\xcc\x46\x37\x95\xfc\x29\x32\x40\x66\xae\x39\x90\xe6\xf2\xdf\x04\xd4\x37\xd9\x8f\x2b\x60\x52\x2d\x1b\x5c\xd7\x15\x6e\xf3\x77\x78\xe9\x55\x68\xab\x34\xf6\x9a\x7d\x6b\x7c\xe9\x5e\x01\x00\x00\xff\xff\x4a\x6b\xec\xca\x55\x01\x00\x00")

func resources_ddl_insert_route_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_route_stops_sql,
		"resources/ddl/insert-route_stops.sql",
	)
}

func resources_ddl_insert_route_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_route_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-route_stops.sql", size: 341, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_station_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x51\x0a\xc2\x30\x0c\x86\xdf\x77\x8a\xbc\x08\x0a\xb2\x0b\xc8\xce\xd2\xca\xd6\x49\xa4\x26\xa3\x7f\xee\x8f\xcd\xdc\xd4\x21\x6a\x9f\x92\xf2\xe5\xfb\x13\x16\xa4\x62\xc4\x62\x4a\xf1\x62\x23\xc2\x0e\xb1\x8d\xb0\xb3\xb1\x4a\xc8\x2c\x09\x91\xf6\x6b\xcf\xc3\x91\xfc\xaf\x16\x07\x42\xca\xa9\x37\x1a\x18\xc6\xd2\x5b\x43\xf5\xa1\xdd\xa0\x68\x17\xba\x19\x8b\xde\x66\xe2\x33\xa5\x06\xa0\x6e\x20\xa9\xd0\x55\x59\xbe\x50\x01\xa6\x93\xa3\x20\x95\x4d\x4e\x87\xf7\xee\x87\x69\xde\x65\xd1\xe4\x87\xc6\x27\x75\x72\x49\x7e\x96\x7f\x0c\x3e\xec\xb3\x79\xbd\xad\x7b\x9d\x79\x6a\xee\x01\x00\x00\xff\xff\xdf\xd5\xe6\xdb\x51\x01\x00\x00")

func resources_ddl_insert_station_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_station_lines_sql,
		"resources/ddl/insert-station_lines.sql",
	)
}

func resources_ddl_insert_station_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_station_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-station_lines.sql", size: 337, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_station_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x3d\xc5\xdf\x08\x0a\x92\x0b\x88\x67\x69\x4a\x3b\x95\x11\x3b\x23\x99\x7f\x7f\x4c\x82\x05\x8b\x59\x65\x3e\x8f\xf7\xd4\x42\x0a\xa1\x46\x47\x7e\x70\x8d\xf1\x14\x39\xe5\xe0\x44\x75\x1b\x83\xfe\x8e\x8c\xf3\x7e\xeb\x72\x45\xdb\xea\xe7\x82\x90\x97\xcc\xc4\xa2\x41\xb5\x99\x03\xea\x0b\xa6\x03\x9b\xbe\xf4\xb0\x16\xdf\x3a\x71\xa8\x74\x7b\xa0\xf6\x4d\x0a\x9e\xae\xf6\xcf\x74\x5b\xc3\x08\xb7\xdd\x68\xd3\x26\xb8\xff\xe6\xda\x72\x1b\x3e\x01\x00\x00\xff\xff\x04\x52\x0b\xc6\xd0\x00\x00\x00")

func resources_ddl_insert_station_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_station_stops_sql,
		"resources/ddl/insert-station_stops.sql",
	)
}

func resources_ddl_insert_station_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_station_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-station_stops.sql", size: 208, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_stations_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x31\x8e\xc2\x30\x10\x45\x7b\x9f\x62\x9a\x95\x6d\x29\xca\x05\xb6\xdf\xd5\x36\x0b\x45\xfa\xd8\x18\xc7\xb2\x94\xcc\x44\x99\x01\xc1\xed\x31\x21\x88\x40\x5c\xf9\xbd\xe2\x69\x7e\x46\x8e\x93\x40\x46\x21\x70\x49\x3a\x6e\xbf\xd8\xd5\x8e\xc5\x4b\x26\x64\x07\x66\xf9\xb6\xe8\x87\x58\xc1\x93\x7a\x2f\x2b\x20\x7c\x41\x8a\x64\x81\x63\x1f\x83\xc0\x31\xb3\x64\x0c\xa2\xa0\x3c\xae\x59\x68\x7c\x74\x66\xe1\xcf\xc9\x2c\xb2\xe4\xec\x56\x12\x2e\xf2\x37\xd2\xf0\x33\xd1\xd0\xc4\x8b\x98\x40\x18\xbc\x18\xbd\xdf\xfd\xfd\x37\x46\x57\x9b\x0e\x68\xf8\xb0\xf7\x10\x68\xab\xad\x55\x5d\xc9\xcc\xcd\xb7\xb5\x34\x96\xa9\xac\xd2\x44\xa7\x11\x0e\xd7\xf5\xad\xdf\xea\x16\x00\x00\xff\xff\x6e\x72\x6c\x02\x24\x01\x00\x00")

func resources_ddl_insert_stations_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_stations_sql,
		"resources/ddl/insert-stations.sql",
	)
}

func resources_ddl_insert_stations_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_stations_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-stations.sql", size: 292, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_stop_times_full_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\x41\x92\xa3\x30\x0c\x45\xd7\x70\x0a\x6f\xba\x7a\xd3\xc5\x0d\x72\x16\xf0\xd8\x02\x3c\xed\x58\x8c\x24\x32\x93\x39\x7d\x0b\x12\x63\xa0\x52\x61\x65\x3d\xeb\x4b\xc8\x5f\x21\x31\x90\x98\x90\x04\x4d\x37\x48\xcf\xed\x07\x77\x4d\xc7\x82\x53\x2b\xe1\x0a\xdc\xf6\x73\x8c\x5d\xcd\x10\xc1\x89\xa9\x8d\x7e\xdc\xac\xd7\xc1\x7f\xed\x43\x87\x1e\x0e\x20\xd9\xeb\x11\x78\x60\x77\x00\xd1\xca\x31\xc6\x74\x88\x07\xc0\x1c\xff\xc7\x04\xe7\x8e\x33\xc5\x1c\x47\x74\x56\x02\xa6\x56\xee\xd3\xd6\x74\xb2\x04\x49\x5a\x96\xf5\xea\xab\xae\x58\x1a\x4b\x14\x6e\x36\xae\xb3\x3d\xf3\xa4\xf1\xa0\xa9\x32\x13\x1c\xf1\xda\x84\xe1\xcf\x0c\xc9\x9d\xe8\x08\xd6\xb7\x1c\x86\xb4\xe1\x29\xb8\xef\x79\xda\xf7\xd7\xba\xa4\xa9\xd8\xf7\x3b\xaa\x7a\xa0\x5b\x70\x65\x18\x69\x84\xc2\xe3\x35\xab\xe7\x79\xa9\x5e\x8a\x6b\x9d\x40\xfa\xf8\xcb\x78\x45\xf4\x4b\x47\xfe\xde\xc5\x3c\xda\xa9\x14\xa5\xc6\x0e\xfa\xd7\xf7\x1d\x20\x9c\xe5\x91\x50\xe5\x80\x47\x24\xd9\xf9\x94\xb9\xfa\x30\xbc\xc0\xc5\xbf\x4c\xca\x5c\x99\x6c\x9e\x64\xe0\x30\x22\x9d\x54\xf0\x4f\xf6\x9c\x1b\x47\x60\x05\x7c\x5b\xf6\x61\x9e\xfc\x93\xd4\x3d\xe1\xd5\xd4\xd5\x69\x3b\xb9\x33\xac\x6b\x9b\x80\xcc\x6f\x0c\x69\x95\xbd\x5c\x60\xcd\x13\x83\xa9\x6c\xed\x25\x9b\x18\xfc\x9b\x02\x8b\x11\xaa\x7d\x48\x37\x8f\x2e\xdb\xe9\x8d\x74\x9d\x52\xb5\xb4\x68\xcb\xc3\xab\x36\x1f\xeb\xbf\x23\x10\xbc\x32\xe2\xf2\xf9\x71\xfb\xfc\x09\x00\x00\xff\xff\xc1\x9f\xed\xaa\x95\x03\x00\x00")

func resources_ddl_insert_stop_times_full_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_stop_times_full_sql,
		"resources/ddl/insert-stop_times_full.sql",
	)
}

func resources_ddl_insert_stop_times_full_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_stop_times_full_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-stop_times_full.sql", size: 917, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_routes_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xd1\x41\x4b\xc3\x30\x14\x07\xf0\x7b\x3f\xc5\xbb\x08\x2d\x88\x50\xa9\x32\x90\x1d\xb2\x2d\x6a\xb1\xad\x23\x4b\x0f\x3b\x35\xb1\xcd\xba\x42\x9b\x8c\xe4\x55\xdc\xb7\x77\x3a\x58\x45\x29\x14\x6f\x09\xfc\xfe\x7f\x1e\xef\x2d\x19\x25\x9c\x02\x27\x8b\x84\x82\xa8\x71\xe7\x8a\x2b\x27\x6e\x84\x35\x3d\x2a\x27\xc0\xf7\x00\xce\x9f\xa2\xa9\x04\xbc\x4b\x5b\xee\xa5\xf5\xa3\xbb\x00\xb2\x57\x0e\x59\x9e\x24\xd7\x5f\x44\xd6\x4a\x97\xc7\x3f\x66\x45\x1f\x49\x9e\xfc\x70\xe7\x2a\xb7\x37\x16\x0b\x2d\x3b\x35\x89\xb7\x46\xd7\xbf\x74\x78\x3b\x1b\xe5\x95\x72\xe5\x20\xef\xa3\x51\x88\xc7\xc3\xa9\xb2\xd1\xe8\x87\xe1\x28\xea\x6d\x3b\x69\xc8\xd2\xb4\xc6\x4e\x92\xa8\x3e\x70\x12\x2f\xad\x92\xa8\xaa\x42\xa2\x80\xea\xf4\xc2\xa6\x53\x97\xb5\x5f\xf8\x32\x67\x8c\x66\xbc\xe0\x71\x4a\x37\x9c\xa4\xeb\xef\x6c\x7f\xa8\xfe\x9b\x5d\xb3\x38\x25\x6c\x0b\x2f\x74\x0b\xfe\x70\xfc\xc0\x0b\x80\x66\x4f\x71\x46\xe7\xb1\xd6\x66\xb5\x18\x5a\x9e\x09\xdb\x50\x3e\xef\x71\x37\xeb\xde\xa2\x07\xef\x33\x00\x00\xff\xff\xe4\xe0\x94\x2e\x56\x02\x00\x00")

func resources_ddl_routes_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_routes_sql,
		"resources/ddl/routes.sql",
	)
}

func resources_ddl_routes_sql() (*asset, error) {
	bytes, err := resources_ddl_routes_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/routes.sql", size: 598, mode: os.FileMode(420), modTime: time.Unix(1422122773, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_select_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x4e\xcd\x49\x4d\x2e\x51\xc8\xcd\xcc\xd3\x28\xd6\x4b\x28\x2e\xc9\x2f\x88\xcf\x49\x2c\x49\xd0\xd4\x51\xc8\x4d\xac\xc0\x10\x42\x56\x95\x9f\x87\xa1\x0a\x24\xa4\x90\x56\x94\x9f\xab\x90\x90\x5e\x92\x56\x1c\xaf\x5a\x9c\x00\x91\x2a\x4e\x50\x28\x06\x04\x00\x00\xff\xff\x27\xdf\x80\x60\x6a\x00\x00\x00")

func resources_ddl_select_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_select_agency_zone_sql,
		"resources/ddl/select-agency-zone.sql",
	)
}

func resources_ddl_select_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_select_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/select-agency-zone.sql", size: 106, mode: os.FileMode(420), modTime: time.Unix(1421874419, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stop_times_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\x4f\x4b\xc3\x30\x18\xc6\xef\xfd\x14\xef\x45\x68\x41\xc4\xe9\x0e\x03\xd9\x21\xdb\xa2\x16\xba\x28\x5d\x7a\x4e\x62\x93\x6e\x41\x97\xc6\xfc\x19\xf8\xed\xed\x02\xba\x21\x3a\x61\x97\x97\xf7\xf0\x7b\x7e\x0f\xcf\xbc\xc6\x88\x62\xa0\x68\x56\x61\xe0\xeb\xd0\x79\x76\xe1\xf9\x15\xf7\xa1\xb7\x2c\xe8\xad\xf2\x1c\xf2\x0c\x80\x07\xa7\x2d\xd3\x92\xc3\x4e\xb8\x76\x23\x5c\x3e\xbe\x2e\x80\x3c\x51\x20\x4d\x55\x5d\xee\x09\xe1\x9c\xde\x89\xb7\x94\xe2\xb0\xbf\xb0\xc0\xf7\xa8\xa9\x8e\x18\xa9\xac\x70\x21\x3a\x75\x92\x4a\xe5\xc7\x5d\xb7\x37\x3f\xba\x12\xe1\xd5\x7b\x54\xa6\x1d\x34\xda\x84\x7c\x34\x2a\xfe\x30\x6d\x94\x90\xcc\xeb\xb5\x39\x08\x27\xbf\xb0\x56\xb7\xaf\x71\x18\xfd\x61\x4f\x19\xa5\x1b\x8c\x7d\xd7\xfd\xc7\xb5\x4e\x89\xa0\x24\x13\x81\x83\x1c\xbe\xb4\xf4\x6b\xc3\x37\x3e\x6f\xea\x1a\x13\xca\x68\xb9\xc4\x2b\x8a\x96\xcf\x29\x1b\xad\x3c\x27\x9b\x15\x80\xc9\x43\x49\xf0\xb4\x34\xa6\x5f\xcc\x0e\xe4\x23\xaa\x57\x98\x4e\x63\xe8\x26\xdb\x97\xf1\x5d\xf6\x19\x00\x00\xff\xff\x64\xbd\x06\x05\xf6\x01\x00\x00")

func resources_ddl_stop_times_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stop_times_sql,
		"resources/ddl/stop_times.sql",
	)
}

func resources_ddl_stop_times_sql() (*asset, error) {
	bytes, err := resources_ddl_stop_times_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stop_times.sql", size: 502, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stop_times_indexes_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\x2e\xc9\x2f\x88\x2f\xc9\xcc\x4d\x2d\x4e\xe0\x52\x00\x02\x47\x17\x17\x85\x80\x20\x4f\x5f\xc7\xa0\x48\x05\x6f\xd7\x48\x05\x8d\x84\x92\xa2\xcc\x82\xf8\xcc\x94\x04\x1d\x05\x88\x62\x20\x53\x53\x07\xae\xd6\xd3\xcf\xc5\x35\x42\x01\xa6\x08\x88\x2a\x12\x90\xf4\x28\x38\x06\x3b\x63\x2a\x86\x1a\x03\x53\x0c\x33\x15\xac\xd8\x9a\x0b\x10\x00\x00\xff\xff\x26\xb9\xe7\x74\xa9\x00\x00\x00")

func resources_ddl_stop_times_indexes_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stop_times_indexes_sql,
		"resources/ddl/stop_times_indexes.sql",
	)
}

func resources_ddl_stop_times_indexes_sql() (*asset, error) {
	bytes, err := resources_ddl_stop_times_indexes_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stop_times_indexes.sql", size: 169, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xd2\x41\x6b\xfa\x30\x18\x06\xf0\xbb\x9f\xe2\xbd\xfc\xa1\xc2\x9f\x81\xc3\x0d\x61\x78\x88\xfa\xea\xca\xda\x2a\x31\x1e\x3c\x25\x59\x13\x5d\xa1\x4d\x4a\x93\x0e\xb6\x4f\xbf\xae\x87\xba\x4d\x3b\x61\xb7\xf7\xf0\x7b\x9e\xc3\x93\xcc\x29\x12\x86\xc0\xc8\x2c\x42\x10\x47\x7f\x70\xfc\x9f\x13\x37\xc2\x79\x5b\x3a\x01\xc1\x00\xa0\xbd\x79\xa6\x04\xbc\xca\x2a\x7d\x91\x55\x30\xbe\x1b\x42\xb2\x66\x90\xec\xa2\xe8\x7f\x27\x52\xab\xf4\x77\xb3\xc0\x25\xd9\x45\x3f\x9d\x91\xc5\x17\x77\x3f\xee\x73\x4a\xbb\xf4\xe4\x46\xb7\x93\x3e\x98\x4b\x2f\x60\x19\xad\x09\xeb\x03\xd6\xfc\x0e\x8e\xda\x0a\x58\xe1\x3a\x46\x46\xf7\xe7\xe6\xdd\x1a\x7d\x36\xc0\xe5\xa6\xba\xca\xaf\xb0\xdc\xa6\xd2\x67\xd6\x70\xff\x56\x36\x3b\x64\xc6\x07\xa3\xd1\x05\x57\xca\x4a\x1b\xcf\x9d\x6f\xf5\x95\xd2\xb4\xd2\xd2\x6b\xc5\x3f\x97\x50\xcd\xe5\xb3\x42\x77\x4f\xd4\xf1\xf9\x8e\x52\x4c\x18\x67\x61\x8c\x5b\x46\xe2\x4d\x9b\xad\x4b\xf5\xd7\xec\x86\x86\x31\x69\x16\x7b\xc2\x3d\x04\xdd\x3f\x19\x0e\x86\x80\xc9\x2a\x4c\x70\x1a\x1a\x63\x17\xb3\x53\xc9\x23\xa1\x5b\x64\xd3\xda\x1f\x26\xc5\xf3\xf8\x61\xf0\x11\x00\x00\xff\xff\x99\x03\x2e\x83\x7f\x02\x00\x00")

func resources_ddl_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stops_sql,
		"resources/ddl/stops.sql",
	)
}

func resources_ddl_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stops.sql", size: 639, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_transfers_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xc1\x4b\xc3\x30\x14\x87\xef\xfd\x2b\xde\x45\xd6\x42\x11\x07\x13\x04\xd9\x21\xdb\x9e\x5a\x6c\xe3\xc8\xd2\xc3\x4e\x79\x71\x6d\xb5\x87\xa6\x25\x79\x13\xfc\xef\x75\x43\xed\xd4\x8b\x78\xcb\xe1\xfb\xbe\xf0\x7e\x4b\x85\x42\x23\x68\xb1\xc8\x11\xe8\x89\x9b\x60\xce\x02\x9d\x13\x7b\xeb\x42\x53\xfb\x40\x10\x47\x00\xd4\xf8\xbe\x33\x81\xfb\xc1\xb4\x15\xc1\x8b\xf5\xbb\x67\xeb\xe3\xd9\x65\x02\xf2\x41\x83\x2c\xf3\x3c\x3d\x60\xdc\xff\x05\xfa\x68\x1b\x7e\x1d\x6a\x82\xd6\x71\x3c\x9d\x8e\x0c\xac\xf0\x46\x94\xb9\x86\xc9\xc5\xe4\xc8\x77\xad\x33\xa3\xd3\x76\x27\xce\x27\xfa\xd5\xde\xf9\xda\x72\x5d\x19\xcb\x04\xd5\xfb\xeb\x80\xff\x2e\x2f\x4b\xa5\x50\x6a\xa3\xb3\x02\x37\x5a\x14\xeb\xa3\xbb\x1f\xaa\xff\xba\x6b\x95\x15\x42\x6d\xe1\x1e\xb7\x10\x7f\x1f\x2b\x3d\x1d\x25\xfd\x71\x7c\x12\x25\x80\xf2\x36\x93\x38\xcf\x9c\xeb\x57\x8b\xf1\x9b\x3b\xa1\x36\xa8\xe7\x7b\x6e\xae\xba\xc7\xd9\x75\xf4\x16\x00\x00\xff\xff\x2b\xfe\xbc\xa5\xaa\x01\x00\x00")

func resources_ddl_transfers_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_transfers_sql,
		"resources/ddl/transfers.sql",
	)
}

func resources_ddl_transfers_sql() (*asset, error) {
	bytes, err := resources_ddl_transfers_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/transfers.sql", size: 426, mode: os.FileMode(420), modTime: time.Unix(1420235978, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_trips_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x91\x41\x4b\xc3\x30\x18\x86\xef\xfd\x15\xdf\x45\x68\x41\x84\xc1\x04\x41\x76\xc8\xb6\x4f\x2d\xb6\x75\x64\xe9\x61\xa7\x26\x6b\xb2\x35\xe8\xd2\x92\xa4\xc3\x9f\x6f\x3b\xb0\x15\x15\x2c\x42\x0e\x21\x79\xbe\x97\xbc\x79\x56\x14\x09\x43\x60\x64\x99\x20\xf0\xa3\x3f\xb8\xe2\xca\xf1\x1b\xee\xad\x6e\x1c\x87\x30\x00\xe0\xb6\x6e\xbd\x2a\xb4\xe4\x70\x16\xb6\xac\x84\x0d\xe7\xb7\x11\xac\xf1\x81\xe4\x09\x83\x2c\x4f\x92\xeb\x1e\x73\xca\x9e\x75\x39\x01\xec\xb3\x7f\x50\xd9\xcb\x77\xa2\x52\x42\x3a\x7d\x34\x7f\xa4\x49\x6d\x55\xe9\x75\x6d\x2e\x91\xda\xf8\x70\x36\xfb\x05\xdb\xbf\xd5\xe5\xeb\x84\x12\x95\x68\x26\x54\x28\xad\x12\x5e\xc9\x42\x78\x0e\xb2\xdb\x79\x7d\x52\x43\x85\x01\x5f\xe5\x94\x62\xc6\x0a\x16\xa7\xb8\x65\x24\xdd\x5c\x66\xdb\x46\xfe\x77\x76\x43\xe3\x94\xd0\x1d\x3c\xe3\x0e\xc2\xe1\x1f\xa3\xfe\xaa\x3f\x1a\x4c\x75\xeb\xbd\x93\x37\x9a\x1b\x91\xd1\xd2\x27\xf4\xc5\x5b\x14\x44\x80\xd9\x63\x9c\xe1\x22\x36\xa6\x5e\x2f\xc7\xe7\x3c\x11\xba\x45\xb6\x68\xfd\xe1\xee\xb4\x9f\xdf\x07\x1f\x01\x00\x00\xff\xff\x57\x81\x12\x41\x39\x02\x00\x00")

func resources_ddl_trips_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_trips_sql,
		"resources/ddl/trips.sql",
	)
}

func resources_ddl_trips_sql() (*asset, error) {
	bytes, err := resources_ddl_trips_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/trips.sql", size: 569, mode: os.FileMode(420), modTime: time.Unix(1422144679, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_update_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x2d\x48\x49\x2c\x49\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x48\x4c\x4f\xcd\x4b\xce\x4c\x2d\x4e\x50\x28\x4e\x2d\x51\x80\x70\x2b\xe3\x73\x33\xf3\xe2\x73\x12\x4b\x12\x6c\xed\x75\x10\x62\x89\x15\x98\x62\x20\x75\xf9\x79\x98\xea\xc0\x62\x5c\x80\x00\x00\x00\xff\xff\x6c\xbd\xa7\x65\x6f\x00\x00\x00")

func resources_ddl_update_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_update_agency_zone_sql,
		"resources/ddl/update-agency-zone.sql",
	)
}

func resources_ddl_update_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_update_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/update-agency-zone.sql", size: 111, mode: os.FileMode(420), modTime: time.Unix(1421882826, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_update_gtfs_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x2d\x48\x49\x2c\x49\x55\x48\x48\x2f\x49\x2b\x4e\xd0\x4b\x48\x4c\x4f\xcd\x4b\xce\x4c\x2d\x4e\x50\x28\x4e\x2d\x51\x80\x70\x2b\xe3\x73\x33\xf3\xe2\x73\x12\x4b\x12\x6c\xed\x75\x10\x62\x89\x15\x98\x62\x20\x75\xf9\x79\x98\xea\xc0\x62\x0a\xe5\x19\xa9\x45\xa9\x70\x89\xec\xd4\x4a\xa0\x20\x17\x20\x00\x00\xff\xff\x86\xf4\xa1\xf0\x81\x00\x00\x00")

func resources_ddl_update_gtfs_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_update_gtfs_agency_zone_sql,
		"resources/ddl/update-gtfs-agency-zone.sql",
	)
}

func resources_ddl_update_gtfs_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_update_gtfs_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/update-gtfs-agency-zone.sql", size: 129, mode: os.FileMode(420), modTime: time.Unix(1421882593, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/ddl/agencies.sql": resources_ddl_agencies_sql,
	"resources/ddl/calendar_dates.sql": resources_ddl_calendar_dates_sql,
	"resources/ddl/calendars.sql": resources_ddl_calendars_sql,
	"resources/ddl/create-table-line_stops.sql": resources_ddl_create_table_line_stops_sql,
	"resources/ddl/create-table-lines.sql": resources_ddl_create_table_lines_sql,
	"resources/ddl/create-table-route_stops.sql": resources_ddl_create_table_route_stops_sql,
	"resources/ddl/create-table-station_lines.sql": resources_ddl_create_table_station_lines_sql,
	"resources/ddl/create-table-station_stops.sql": resources_ddl_create_table_station_stops_sql,
	"resources/ddl/create-table-stations.sql": resources_ddl_create_table_stations_sql,
	"resources/ddl/create-table-stop_times_full.sql": resources_ddl_create_table_stop_times_full_sql,
	"resources/ddl/insert-line_stops.sql": resources_ddl_insert_line_stops_sql,
	"resources/ddl/insert-lines.sql": resources_ddl_insert_lines_sql,
	"resources/ddl/insert-route_stops.sql": resources_ddl_insert_route_stops_sql,
	"resources/ddl/insert-station_lines.sql": resources_ddl_insert_station_lines_sql,
	"resources/ddl/insert-station_stops.sql": resources_ddl_insert_station_stops_sql,
	"resources/ddl/insert-stations.sql": resources_ddl_insert_stations_sql,
	"resources/ddl/insert-stop_times_full.sql": resources_ddl_insert_stop_times_full_sql,
	"resources/ddl/routes.sql": resources_ddl_routes_sql,
	"resources/ddl/select-agency-zone.sql": resources_ddl_select_agency_zone_sql,
	"resources/ddl/stop_times.sql": resources_ddl_stop_times_sql,
	"resources/ddl/stop_times_indexes.sql": resources_ddl_stop_times_indexes_sql,
	"resources/ddl/stops.sql": resources_ddl_stops_sql,
	"resources/ddl/transfers.sql": resources_ddl_transfers_sql,
	"resources/ddl/trips.sql": resources_ddl_trips_sql,
	"resources/ddl/update-agency-zone.sql": resources_ddl_update_agency_zone_sql,
	"resources/ddl/update-gtfs-agency-zone.sql": resources_ddl_update_gtfs_agency_zone_sql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"resources": &_bintree_t{nil, map[string]*_bintree_t{
		"ddl": &_bintree_t{nil, map[string]*_bintree_t{
			"agencies.sql": &_bintree_t{resources_ddl_agencies_sql, map[string]*_bintree_t{
			}},
			"calendar_dates.sql": &_bintree_t{resources_ddl_calendar_dates_sql, map[string]*_bintree_t{
			}},
			"calendars.sql": &_bintree_t{resources_ddl_calendars_sql, map[string]*_bintree_t{
			}},
			"create-table-line_stops.sql": &_bintree_t{resources_ddl_create_table_line_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-lines.sql": &_bintree_t{resources_ddl_create_table_lines_sql, map[string]*_bintree_t{
			}},
			"create-table-route_stops.sql": &_bintree_t{resources_ddl_create_table_route_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-station_lines.sql": &_bintree_t{resources_ddl_create_table_station_lines_sql, map[string]*_bintree_t{
			}},
			"create-table-station_stops.sql": &_bintree_t{resources_ddl_create_table_station_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-stations.sql": &_bintree_t{resources_ddl_create_table_stations_sql, map[string]*_bintree_t{
			}},
			"create-table-stop_times_full.sql": &_bintree_t{resources_ddl_create_table_stop_times_full_sql, map[string]*_bintree_t{
			}},
			"insert-line_stops.sql": &_bintree_t{resources_ddl_insert_line_stops_sql, map[string]*_bintree_t{
			}},
			"insert-lines.sql": &_bintree_t{resources_ddl_insert_lines_sql, map[string]*_bintree_t{
			}},
			"insert-route_stops.sql": &_bintree_t{resources_ddl_insert_route_stops_sql, map[string]*_bintree_t{
			}},
			"insert-station_lines.sql": &_bintree_t{resources_ddl_insert_station_lines_sql, map[string]*_bintree_t{
			}},
			"insert-station_stops.sql": &_bintree_t{resources_ddl_insert_station_stops_sql, map[string]*_bintree_t{
			}},
			"insert-stations.sql": &_bintree_t{resources_ddl_insert_stations_sql, map[string]*_bintree_t{
			}},
			"insert-stop_times_full.sql": &_bintree_t{resources_ddl_insert_stop_times_full_sql, map[string]*_bintree_t{
			}},
			"routes.sql": &_bintree_t{resources_ddl_routes_sql, map[string]*_bintree_t{
			}},
			"select-agency-zone.sql": &_bintree_t{resources_ddl_select_agency_zone_sql, map[string]*_bintree_t{
			}},
			"stop_times.sql": &_bintree_t{resources_ddl_stop_times_sql, map[string]*_bintree_t{
			}},
			"stop_times_indexes.sql": &_bintree_t{resources_ddl_stop_times_indexes_sql, map[string]*_bintree_t{
			}},
			"stops.sql": &_bintree_t{resources_ddl_stops_sql, map[string]*_bintree_t{
			}},
			"transfers.sql": &_bintree_t{resources_ddl_transfers_sql, map[string]*_bintree_t{
			}},
			"trips.sql": &_bintree_t{resources_ddl_trips_sql, map[string]*_bintree_t{
			}},
			"update-agency-zone.sql": &_bintree_t{resources_ddl_update_agency_zone_sql, map[string]*_bintree_t{
			}},
			"update-gtfs-agency-zone.sql": &_bintree_t{resources_ddl_update_gtfs_agency_zone_sql, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

