package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _resources_ddl_agencies_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd0\xc1\x4a\x03\x31\x10\x80\xe1\xfb\x3e\xc5\x5c\x84\x04\x44\x28\x54\x10\xa4\x87\xb4\x1d\x75\x31\x46\x89\xe9\xa1\xa7\x26\xd6\xec\x1a\xd8\x4c\x60\x37\x2b\xea\xd3\xab\x08\xb2\x50\x16\x72\x1c\xe6\x9b\xff\x30\x1b\x8d\xc2\x20\x18\xb1\x96\x08\xb6\xcd\xcd\x70\x38\x1b\xec\x85\x75\xad\xa7\x63\xf0\x83\x05\x56\x01\xfc\x8d\x9f\x87\xf0\x6a\x21\x50\x66\x8b\x05\x07\xf5\x68\x40\xed\xa4\x3c\x9f\xec\xc9\x45\x6f\xe1\xdd\xf5\xc7\x37\xd7\xb3\xe5\x25\x87\x2d\xde\x88\x9d\x3c\x95\x63\xdf\x95\xc1\x1c\xa2\xff\x4a\x54\x98\xed\x1c\xb5\x65\x32\x06\xfa\xd1\xd9\x42\xd3\x25\x97\xe7\x99\xfb\x28\x62\xbf\xb5\x44\x45\xb5\x79\xf6\xa4\xeb\x07\xa1\xf7\x70\x8f\x7b\x60\x93\x9f\xf3\x8a\x03\xaa\xdb\x5a\xe1\xaa\x26\x4a\xdb\xf5\xff\xe5\xe6\x4e\xe8\x67\x34\xab\x31\x37\x57\xf1\x65\x79\x5d\x7d\x07\x00\x00\xff\xff\x77\x3b\x44\x0a\xd0\x01\x00\x00")

func resources_ddl_agencies_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_agencies_sql,
		"resources/ddl/agencies.sql",
	)
}

func resources_ddl_agencies_sql() (*asset, error) {
	bytes, err := resources_ddl_agencies_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/agencies.sql", size: 464, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_calendar_dates_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\xce\x41\x4b\xc3\x30\x14\x07\xf0\xfb\x3e\xc5\xbb\x08\x0d\x74\xc2\xc0\x83\x20\x3b\x64\xdb\x53\x8b\x31\x4a\xcc\x0e\x3b\xe5\xd5\x36\x93\x80\x66\xa5\x89\x52\xbf\xbd\x0d\xb4\xb6\x85\x90\x43\xde\xef\xff\xcf\xdb\x2b\xe4\x1a\x41\xf3\x9d\x40\xa0\x8f\x78\x0e\xe6\x2a\xd0\x35\x55\xe5\xa7\xf5\x75\xd9\x9a\xba\x8c\x36\x10\x64\x2b\x00\x0a\xb6\xfd\x71\x95\x35\xae\x26\x70\x3e\x66\x9b\x0d\x03\xf9\xa2\x41\x1e\x85\xc8\x13\x48\x98\x20\xdd\xcb\x77\xdb\x55\xb6\x89\xee\xe2\x4d\xfc\x6d\xec\x14\x3e\xe0\x3d\x3f\x8a\x09\xae\xd7\xf0\xaa\x8a\x67\xae\x4e\xf0\x84\x27\xc8\xe6\x3f\xe6\x43\x3d\xeb\x5d\x1a\xce\x66\xfd\xe9\x68\xa9\x59\x3e\xb2\x14\x1a\xc1\x50\xc0\x00\xe5\x43\x21\x71\x5b\x78\x7f\x39\xec\xfe\xd7\xd8\x3f\x72\xf5\x86\x7a\xfb\x1d\xcf\xb7\x5f\xef\x37\x77\xab\xbf\x00\x00\x00\xff\xff\xcd\x24\xf7\xec\x1e\x01\x00\x00")

func resources_ddl_calendar_dates_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_calendar_dates_sql,
		"resources/ddl/calendar_dates.sql",
	)
}

func resources_ddl_calendar_dates_sql() (*asset, error) {
	bytes, err := resources_ddl_calendar_dates_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/calendar_dates.sql", size: 286, mode: os.FileMode(420), modTime: time.Unix(1425025824, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_calendars_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd1\x4f\x4b\xfb\x30\x18\xc0\xf1\x7b\x5f\xc5\x73\xf9\x41\x0b\xbf\x09\x03\x0f\x82\xec\xd0\x6d\x51\x8b\xb5\x4a\xed\x0e\x3b\x35\x75\x4d\x35\xe0\x32\x48\x9e\xa8\x7b\xf7\xb6\x2e\xff\x40\x34\xc2\xd8\xa1\xf9\x10\x9e\x27\xdf\x55\x4d\xf2\x86\x40\x93\x2f\x4b\x02\xf4\x19\x07\xd5\xfe\x53\xf4\x8c\xee\xba\x57\x26\xfa\x4e\x2a\x0a\x69\x02\x40\x15\x93\x6f\x7c\xc7\x5a\xde\x53\xe0\x02\xd3\xf9\x3c\x83\xea\xbe\x81\x6a\x53\x96\xff\x27\xb0\x3f\x8c\xfc\x48\x01\xb9\x38\x7e\x81\x0c\xd6\xe4\x2a\xdf\x94\x81\x41\xcd\x54\x14\xbd\xb3\x5e\xfc\x81\xe1\x8b\x96\x71\x35\x48\x1e\x35\xaa\x43\x2d\xe3\x4a\xc7\xf7\x53\xd8\x49\x6c\xfb\x0e\x19\x85\xe9\xff\xbb\x18\xdf\xf4\xb7\xf3\xd9\x0c\x1e\xea\xe2\x2e\xaf\xb7\x70\x4b\xb6\x90\x86\xcf\x9e\x4d\x60\xfa\x1a\x7c\x1c\x7f\x1f\xf4\x47\xe6\xa6\x71\xcc\xcf\xe7\x99\x1d\xc9\x22\x37\xa2\x27\xa7\xb6\x16\x98\xd2\xfe\xd8\x64\xb5\xe7\xb6\xb2\x07\x2e\xa9\x25\xbe\x71\x70\x8b\x09\xea\xae\xb1\x81\x3d\x39\xd5\xb4\xc0\xb4\x0d\x16\x36\x21\xdd\xba\x36\x6c\x40\x74\xb8\x89\x69\x9a\x25\x19\x90\xea\xba\xa8\xc8\xa2\x10\xe2\xb0\x5e\xba\x2e\xab\x9b\xbc\x7e\x24\xcd\x42\xe3\x70\xb1\x7f\x3a\xbf\x4c\x3e\x03\x00\x00\xff\xff\xd3\xba\xe0\x1f\x2f\x03\x00\x00")

func resources_ddl_calendars_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_calendars_sql,
		"resources/ddl/calendars.sql",
	)
}

func resources_ddl_calendars_sql() (*asset, error) {
	bytes, err := resources_ddl_calendars_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/calendars.sql", size: 815, mode: os.FileMode(420), modTime: time.Unix(1425025824, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_line_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xcd\xc1\x4b\x87\x30\x14\x07\xf0\xfb\xef\xaf\x78\x97\x60\x03\x7f\x81\x60\x10\x84\x87\xa9\xaf\x92\xd6\x8a\x35\x0f\x9e\x9c\xe9\x34\xa1\x66\xb8\x15\xfd\xf9\x29\x35\xab\x43\xf0\x4e\xef\xfb\x79\xdf\x97\x4b\x64\x0a\x41\xb1\x8c\x23\xe8\xd1\x0f\xae\x39\x71\xfa\x54\x3f\x4f\xd6\x34\xce\xcf\xaf\x4e\x03\x39\x00\x7c\x2d\xa6\x5e\xc3\x64\xbd\x19\xcd\x42\xe2\x98\x82\xb8\x53\x20\x2a\xce\xa3\x4d\x6c\x3a\x88\x7f\xd2\x6e\xee\x8d\x86\xf7\x76\xe9\x9e\xda\x85\x24\x67\x7f\xcd\xf1\x08\xf7\xb2\xbc\x65\xb2\x86\x1b\xac\x81\xec\x3f\xa3\xbd\x9b\xae\x6c\xcb\x42\xb4\xce\x87\xfe\x25\x69\x14\xc0\xf7\x45\x00\x3f\x05\x14\x50\x5c\x95\x02\xd3\xd2\xda\xb9\xc8\xa0\xc0\x4b\x56\x71\x05\xf9\x35\x93\x0f\xa8\xd2\x37\x3f\x9c\xbf\x3c\x26\x17\x87\xcf\x00\x00\x00\xff\xff\xfa\x11\x22\xd4\x1b\x01\x00\x00")

func resources_ddl_create_table_line_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_line_stops_sql,
		"resources/ddl/create-table-line_stops.sql",
	)
}

func resources_ddl_create_table_line_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_line_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-line_stops.sql", size: 283, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8d\x41\x4b\xc4\x30\x10\x85\xef\xfd\x15\xef\x22\x24\xe0\x0a\x0b\x2b\x08\xb2\x87\x6c\x3b\x6a\x30\x4d\x25\xa6\x87\x9e\x9a\xaa\x69\x2d\xd8\x08\x6d\x15\x7f\xbe\x4d\xc1\x8a\x07\x61\x0e\xc3\x9b\xef\xcd\x97\x1a\x12\x96\x60\xc5\x49\x11\x5c\x37\xb7\x53\x7d\x36\xb9\x0b\xf7\xd6\x07\x3f\x39\xb0\x04\x58\xf7\xba\x7f\x71\xe8\xc3\xec\x3b\x3f\xb2\xfd\x9e\x43\x17\x16\xba\x54\x0a\xa2\xb4\x45\x2d\xf5\xf2\x28\x27\x6d\xcf\xb7\x42\x68\x06\xef\xf0\xd9\x8c\xcf\xaf\xcd\xc8\x0e\x97\xbf\x95\xc8\xec\x76\x78\x30\x32\x17\xa6\xc2\x3d\x55\x60\x9b\x84\xc7\x6b\x8c\x7e\x92\x65\xbe\xdc\xff\x40\xd4\xfc\x41\x56\x2f\x4f\x38\x48\xdf\x4a\x4d\x47\x19\xc2\x7b\x76\x42\x46\x37\xa2\x54\x16\xe9\x9d\x30\x8f\x64\x8f\x1f\x73\x7b\x35\x3c\x1d\xae\x93\xef\x00\x00\x00\xff\xff\x00\xad\x65\x5f\x02\x01\x00\x00")

func resources_ddl_create_table_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_lines_sql,
		"resources/ddl/create-table-lines.sql",
	)
}

func resources_ddl_create_table_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-lines.sql", size: 258, mode: os.FileMode(420), modTime: time.Unix(1424961624, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_route_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\xca\x2f\x2d\x49\x8d\x2f\x2e\xc9\x2f\x28\x4e\x50\xd0\xe0\x52\x50\x80\x8a\x64\xa6\x24\x28\x64\xe6\x95\x68\x18\x1a\x6a\x2a\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\x80\xa4\x41\x4a\x09\xc8\x26\xe7\xa7\xa4\x26\x28\x94\x25\x16\x25\x67\x24\x16\x69\x98\x98\xa2\xaa\xd1\xd5\x55\x08\x08\xf2\xf4\x75\x0c\x8a\x54\xf0\x76\x8d\x54\xd0\x40\x58\xa8\x03\x37\x5c\x13\xa4\x10\x24\x0b\x97\x04\xa2\x8a\x04\x64\xc5\x08\x25\x50\x4d\x30\x15\x70\x33\xb8\x34\x15\x5c\xfd\xdc\x3d\xfd\x5c\x6d\x3d\xf3\xf2\xf2\x5d\x9c\x14\x5c\x5c\xdd\x1c\x43\x7d\x42\x14\x9c\x3d\x1c\x83\x82\x5d\x43\x6c\x4b\x4b\xd2\x2c\x72\x93\x4c\xac\xb9\x00\x01\x00\x00\xff\xff\xfb\x2f\x94\x64\x1d\x01\x00\x00")

func resources_ddl_create_table_route_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_route_stops_sql,
		"resources/ddl/create-table-route_stops.sql",
	)
}

func resources_ddl_create_table_route_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_route_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-route_stops.sql", size: 285, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_station_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\x2e\x49\x2c\xc9\xcc\xcf\x8b\xcf\xc9\xcc\x4b\x2d\x4e\x50\xd0\xe0\x52\x50\x80\x8b\x65\xa6\x24\x28\x64\xe6\x95\xa4\xa6\xa7\x16\x69\x18\x1a\x6a\x2a\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\x80\x14\x81\x34\xe0\x55\xa1\xab\xab\x10\x10\xe4\xe9\xeb\x18\x14\xa9\xe0\xed\x1a\xa9\xa0\x81\x6c\xac\x0e\x42\xbf\x26\x48\x2d\x48\x01\x92\x3c\x10\x55\x24\xa0\xea\x40\x28\x83\x6a\x84\xa9\x81\x9b\xc3\xa5\xa9\xe0\xea\xe7\xee\xe9\xe7\x6a\xeb\x99\x97\x97\xef\xe2\xa4\xe0\xe2\xea\xe6\x18\xea\x13\xa2\xe0\xec\xe1\x18\x14\xec\x1a\x62\x5b\x5a\x92\x66\x91\x9b\x64\x62\xcd\x05\x08\x00\x00\xff\xff\xe7\x94\x97\x91\x0c\x01\x00\x00")

func resources_ddl_create_table_station_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_station_lines_sql,
		"resources/ddl/create-table-station_lines.sql",
	)
}

func resources_ddl_create_table_station_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_station_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-station_lines.sql", size: 268, mode: os.FileMode(420), modTime: time.Unix(1424961624, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_station_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8c\xcf\xca\x82\x40\x14\x47\xf7\x3e\xc5\xdd\x7c\xa0\xa0\x1f\x08\x2d\x82\x70\x31\xea\xad\xa4\x69\x8a\x69\x5c\xb8\x72\x8a\x54\x5c\x34\x23\xcd\x04\x3d\x7e\xd9\x1f\xb3\xe0\xae\xee\xef\x9c\x93\x70\x24\x02\x41\x90\x98\x22\xc8\xc6\xd6\xa6\xfc\x33\xf2\x5f\x1a\xbb\xb7\xad\x56\xa5\xb1\xba\x33\x12\x5c\x07\x60\xf8\xb5\x47\x09\xad\xb2\x55\x53\x9d\xdd\x30\xf4\x80\x6d\x04\xb0\x9c\x52\xff\x09\xe9\xee\x4d\xfc\xae\x41\x00\x5b\x9e\xad\x09\x2f\x60\x85\x05\xb8\xe3\xa2\x3f\x98\x5e\xdf\xe9\xf7\xd1\x7c\xbf\xab\xfc\x16\xc6\xd8\x43\xfc\x30\xaf\x8e\xe3\x01\xb2\x45\xc6\x30\xca\x94\xd2\x69\x0c\x29\xce\x49\x4e\x05\x24\x4b\xc2\x77\x28\xa2\x8b\xad\xa7\xa7\xc3\x64\xe6\xdc\x02\x00\x00\xff\xff\x8f\x52\x70\xf5\x06\x01\x00\x00")

func resources_ddl_create_table_station_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_station_stops_sql,
		"resources/ddl/create-table-station_stops.sql",
	)
}

func resources_ddl_create_table_station_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_station_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-station_stops.sql", size: 262, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_stations_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x51\x4b\xc3\x30\x14\x85\xdf\xfb\x2b\xce\x8b\xd0\x82\x13\x06\x43\x04\xd9\x43\xb6\x45\x0d\x66\xd9\xe8\xd2\x87\x3d\xf5\x46\x4d\x6b\x61\x4d\xa0\x8d\xa2\xff\xde\x76\xa0\xb6\x63\x30\x08\x81\x5c\xbe\x93\x7b\xbe\x65\xca\x99\xe6\xd0\x6c\x21\x39\xa8\x0c\x45\x9b\x5f\xb5\x74\x43\x6d\x30\xa1\xf2\xae\x25\xc4\x11\xf0\xfb\xcc\xab\x37\x42\xe5\x82\x2d\x6d\x13\x4f\xa7\x09\xd4\x46\x43\x65\x52\x82\x65\x7a\x93\x0b\xd5\x7d\xb7\xe6\x4a\x5f\x0f\x33\xce\xd4\x96\xf0\x69\x9a\xd7\x77\xd3\xc4\xb7\xb3\xff\xd4\x08\x3b\x98\x40\x28\x0e\xde\x04\xac\xf8\x03\xcb\xe4\x39\xc6\xbb\x8b\x4c\x69\x3d\xa1\xbb\x6a\x1b\x9a\xef\xd1\xaa\xc9\x04\xdb\x54\xac\x59\xba\xc7\x33\xdf\x23\x1e\x5a\x25\x3d\xd0\x4f\x07\xc3\xee\x7c\xd1\x25\xac\xb7\x3b\x05\x8f\xc6\x47\x74\xb7\x65\x5a\x30\x39\x8e\x74\xe5\x4e\x13\x7d\xe9\x24\x4a\xc0\xd5\xa3\x50\x7c\x2e\x9c\xf3\xab\xc5\x9f\xe3\xf2\x89\xa5\x3b\xae\xe7\x1f\xa1\xb8\xab\x5f\x66\xf7\xd1\x4f\x00\x00\x00\xff\xff\x1b\x01\x03\xab\xb6\x01\x00\x00")

func resources_ddl_create_table_stations_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_stations_sql,
		"resources/ddl/create-table-stations.sql",
	)
}

func resources_ddl_create_table_stations_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_stations_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-stations.sql", size: 438, mode: os.FileMode(420), modTime: time.Unix(1424961624, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_create_table_stop_times_full_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd3\xcd\x8e\xda\x30\x10\x07\xf0\xfb\x3e\x85\x2f\x95\x40\xaa\x2a\x51\xd1\x6a\xa5\x6a\x0f\x59\x30\x14\x29\x0d\x12\x0d\x87\x9e\x62\xe3\x4c\x12\x8b\x60\xa7\xf6\x04\x95\x3e\xfd\x86\x44\xe2\x2b\x21\xce\x85\x03\xfe\x69\x3c\x93\xbf\x67\xb6\xa1\x5e\x48\x49\xe8\xbd\xfb\x94\xb0\x14\x13\x1b\x7d\xb2\xec\x0b\xb3\xa8\x8b\x08\xe5\x01\x6c\x94\x94\x79\xce\xc8\xe8\x85\x90\xe6\x5f\x19\x33\x22\x15\x8e\x26\x93\x31\x09\xd6\x21\x09\xb6\xbe\xff\xf9\x72\x2a\x74\x0c\x8c\x1c\xb9\x11\x19\x37\xa3\xe9\xb7\x31\x99\xd3\x85\xb7\xf5\x1f\x9d\xe2\x87\x1b\xf7\x7d\xfa\xcc\xc5\x60\xc5\xd5\x4d\xbe\xbe\x3e\x83\x39\x47\x46\x16\xfe\xda\x0b\x9f\x01\xad\xfa\x41\x0a\x9a\x91\x25\x5d\xff\xa2\xe1\xe6\x4f\xdb\xfc\xd7\x0a\xea\xe1\xdd\xc3\x95\x26\x77\xb0\x5c\x0b\x8e\x52\xab\x08\x4f\x05\x5c\xbf\x67\xcb\x15\xdc\x80\xc2\xc8\x62\xad\x1d\x45\xb9\x31\xf2\xc8\xf3\x3a\x37\x46\xce\xbf\x6d\x13\x43\x55\x12\x4b\x03\xbd\xaa\x9e\xc2\xc2\xdf\x12\x94\xe8\x6b\xaf\x76\x19\xf0\x38\xb2\x32\xbd\x69\xaf\x2b\xa5\x42\x8a\x7d\x59\xb8\x06\x8e\x4d\x55\x51\x27\x89\xcb\x59\x30\x47\x29\x06\x04\x82\x46\xf6\xbc\xd9\xfa\xf4\x3c\xc0\x7d\xff\x9d\x95\x62\x69\x40\xd4\xa1\xdd\x96\x6b\xb1\x5d\x95\xed\x7e\xc0\x43\xc9\x78\x31\xa0\x7d\x9e\x56\x11\x9c\xfa\x6f\x34\xba\x44\x18\x42\x6c\xa6\x0d\x3e\xac\x5e\xe7\xad\x0d\xaf\x36\x26\x7d\xd0\xdd\x0b\xd8\xf0\xfb\x55\xed\x5c\xe9\x06\x3a\xa2\x6d\x90\x7b\x87\x1a\x27\x74\xae\xcd\x20\x89\xf0\x0f\x5d\xfc\x65\x4c\x68\xb0\x5c\x05\xf4\x6d\xa5\x94\x9e\xbf\x5f\x0e\x67\x3f\xbd\xcd\x6f\x1a\xbe\x95\x98\xbc\x1e\x76\xd3\x1f\x1f\x01\x00\x00\xff\xff\x31\xd3\x1c\x1a\x39\x05\x00\x00")

func resources_ddl_create_table_stop_times_full_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_create_table_stop_times_full_sql,
		"resources/ddl/create-table-stop_times_full.sql",
	)
}

func resources_ddl_create_table_stop_times_full_sql() (*asset, error) {
	bytes, err := resources_ddl_create_table_stop_times_full_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/create-table-stop_times_full.sql", size: 1337, mode: os.FileMode(420), modTime: time.Unix(1425026036, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_line_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x51\x4e\xc4\x30\x0c\x44\xbf\x37\xa7\xf0\x0f\x12\x48\x28\x17\x40\x7b\x96\x16\x1a\x2f\x18\xa5\x36\xb2\xcd\x07\xb7\x27\x0e\xd9\x0d\x42\xa8\xfd\x9a\xa9\xfc\x66\xa2\x21\x36\x54\x07\x62\x17\x58\x5f\xfd\x62\xcb\x9d\xad\x79\xad\xc4\xb8\x98\xcb\x87\xad\x70\xdf\x0d\x95\x47\x88\x1f\x53\x6c\x52\xf0\x01\x0c\x2b\x6e\x0e\x85\xcc\x89\x37\x4f\x27\xa8\x79\x02\x79\x22\xf9\x06\xa5\x8b\xca\x9e\x4e\xbf\xea\x46\x93\xb5\x77\x30\x2a\xbc\x0b\x71\x82\xf6\xfd\x39\x59\x9c\x76\x8c\x3b\x07\xe1\x19\x7e\x36\xbf\x4a\x38\x48\x70\xa5\x28\xe9\xac\xe7\x70\x83\x1d\xf2\x88\x55\xf9\xf4\x68\xd6\x1f\xb8\xdb\xa0\xf5\x26\x0f\xe0\x98\xa3\xb1\x35\xd8\x2b\x60\x6f\xa2\xbe\xf0\xf3\x8e\xe7\xb1\x57\xe8\x24\x5a\x5a\xc8\xcb\x57\x8f\xf8\x6f\xc8\xa7\xf4\x1d\x00\x00\xff\xff\xf7\x5c\xdf\xe3\xb2\x01\x00\x00")

func resources_ddl_insert_line_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_line_stops_sql,
		"resources/ddl/insert-line_stops.sql",
	)
}

func resources_ddl_insert_line_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_line_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-line_stops.sql", size: 434, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8c\x31\x0e\xc2\x40\x0c\x04\xfb\x7b\xc5\x36\x48\xd0\xe4\x03\x3c\xe6\x2e\x24\x0e\x58\x4a\x6c\xc9\x5e\x0a\x7e\xcf\x71\x05\xa2\x61\x9b\x6d\x66\x46\x2d\x25\x08\x35\x3a\xda\x9d\x5b\xd6\x53\xb6\xa9\xed\x6a\x92\x0d\xe7\xcf\x57\x9b\x0f\xb9\x20\x65\x97\x85\x58\x35\xa9\xb6\xb0\xa0\x2f\xa6\xf0\x27\xa5\xe6\xc3\x83\x83\xc3\x9c\xf8\x4a\x65\x0b\x3f\x06\xf8\x93\x1e\x46\x6f\x47\xf1\x58\x25\x70\x7b\xfd\x49\x5d\xcb\x3b\x00\x00\xff\xff\x0f\x00\x83\x13\x9d\x00\x00\x00")

func resources_ddl_insert_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_lines_sql,
		"resources/ddl/insert-lines.sql",
	)
}

func resources_ddl_insert_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-lines.sql", size: 157, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_route_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8f\x41\xae\xc2\x30\x0c\x44\xf7\x3d\x85\x37\x5f\xfa\x48\x28\x17\x40\x3d\x4b\x23\x35\x2e\x32\xa2\x31\xb2\x87\xfb\x93\xb4\xb4\xe9\x02\xe8\xa2\xb2\xa3\x79\x79\x19\xc9\xce\x06\x92\x0c\xa5\x78\xc5\xe4\xc3\x9f\xc7\x10\x4d\x9f\xe0\xc1\xa1\x0f\x8f\xf4\xbf\x6e\x92\xce\x54\x4f\xda\x30\x6a\xe2\x13\x39\xdf\x79\x04\x25\x71\x48\x1e\xd1\x51\xf9\x2c\x1c\x98\xd0\xa8\xb0\x73\xdd\x64\x3a\x2f\xd9\x83\xf6\x2d\xf4\xf2\x9e\xcc\x46\x37\x95\xfc\x29\x32\x40\x66\xae\x39\x90\xe6\xf2\xdf\x04\xd4\x37\xd9\x8f\x2b\x60\x52\x2d\x1b\x5c\xd7\x15\x6e\xf3\x77\x78\xe9\x55\x68\xab\x34\xf6\x9a\x7d\x6b\x7c\xe9\x5e\x01\x00\x00\xff\xff\x4a\x6b\xec\xca\x55\x01\x00\x00")

func resources_ddl_insert_route_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_route_stops_sql,
		"resources/ddl/insert-route_stops.sql",
	)
}

func resources_ddl_insert_route_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_route_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-route_stops.sql", size: 341, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_station_lines_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x51\x0a\xc2\x30\x0c\x86\xdf\x77\x8a\xbc\x08\x0a\xb2\x0b\xc8\xce\xd2\xca\xd6\x49\xa4\x26\xa3\x7f\xee\x8f\xcd\xdc\xd4\x21\x6a\x9f\x92\xf2\xe5\xfb\x13\x16\xa4\x62\xc4\x62\x4a\xf1\x62\x23\xc2\x0e\xb1\x8d\xb0\xb3\xb1\x4a\xc8\x2c\x09\x91\xf6\x6b\xcf\xc3\x91\xfc\xaf\x16\x07\x42\xca\xa9\x37\x1a\x18\xc6\xd2\x5b\x43\xf5\xa1\xdd\xa0\x68\x17\xba\x19\x8b\xde\x66\xe2\x33\xa5\x06\xa0\x6e\x20\xa9\xd0\x55\x59\xbe\x50\x01\xa6\x93\xa3\x20\x95\x4d\x4e\x87\xf7\xee\x87\x69\xde\x65\xd1\xe4\x87\xc6\x27\x75\x72\x49\x7e\x96\x7f\x0c\x3e\xec\xb3\x79\xbd\xad\x7b\x9d\x79\x6a\xee\x01\x00\x00\xff\xff\xdf\xd5\xe6\xdb\x51\x01\x00\x00")

func resources_ddl_insert_station_lines_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_station_lines_sql,
		"resources/ddl/insert-station_lines.sql",
	)
}

func resources_ddl_insert_station_lines_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_station_lines_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-station_lines.sql", size: 337, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_station_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x3d\xc5\xdf\x08\x0a\x92\x0b\x88\x67\x69\x4a\x3b\x95\x11\x3b\x23\x99\x7f\x7f\x4c\x82\x05\x8b\x59\x65\x3e\x8f\xf7\xd4\x42\x0a\xa1\x46\x47\x7e\x70\x8d\xf1\x14\x39\xe5\xe0\x44\x75\x1b\x83\xfe\x8e\x8c\xf3\x7e\xeb\x72\x45\xdb\xea\xe7\x82\x90\x97\xcc\xc4\xa2\x41\xb5\x99\x03\xea\x0b\xa6\x03\x9b\xbe\xf4\xb0\x16\xdf\x3a\x71\xa8\x74\x7b\xa0\xf6\x4d\x0a\x9e\xae\xf6\xcf\x74\x5b\xc3\x08\xb7\xdd\x68\xd3\x26\xb8\xff\xe6\xda\x72\x1b\x3e\x01\x00\x00\xff\xff\x04\x52\x0b\xc6\xd0\x00\x00\x00")

func resources_ddl_insert_station_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_station_stops_sql,
		"resources/ddl/insert-station_stops.sql",
	)
}

func resources_ddl_insert_station_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_station_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-station_stops.sql", size: 208, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_stations_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x31\x8e\xc2\x30\x10\x45\x7b\x9f\x62\x9a\x95\x6d\x29\xca\x05\xb6\xdf\xd5\x36\x0b\x45\xfa\xd8\x18\xc7\xb2\x94\xcc\x44\x99\x01\xc1\xed\x31\x21\x88\x40\x5c\xf9\xbd\xe2\x69\x7e\x46\x8e\x93\x40\x46\x21\x70\x49\x3a\x6e\xbf\xd8\xd5\x8e\xc5\x4b\x26\x64\x07\x66\xf9\xb6\xe8\x87\x58\xc1\x93\x7a\x2f\x2b\x20\x7c\x41\x8a\x64\x81\x63\x1f\x83\xc0\x31\xb3\x64\x0c\xa2\xa0\x3c\xae\x59\x68\x7c\x74\x66\xe1\xcf\xc9\x2c\xb2\xe4\xec\x56\x12\x2e\xf2\x37\xd2\xf0\x33\xd1\xd0\xc4\x8b\x98\x40\x18\xbc\x18\xbd\xdf\xfd\xfd\x37\x46\x57\x9b\x0e\x68\xf8\xb0\xf7\x10\x68\xab\xad\x55\x5d\xc9\xcc\xcd\xb7\xb5\x34\x96\xa9\xac\xd2\x44\xa7\x11\x0e\xd7\xf5\xad\xdf\xea\x16\x00\x00\xff\xff\x6e\x72\x6c\x02\x24\x01\x00\x00")

func resources_ddl_insert_stations_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_stations_sql,
		"resources/ddl/insert-stations.sql",
	)
}

func resources_ddl_insert_stations_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_stations_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-stations.sql", size: 292, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_insert_stop_times_full_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\x4d\x92\xa3\x30\x0c\x85\xd7\x70\x0a\x6f\xba\x7a\x93\xe2\x06\x39\x0b\x78\x8c\x00\x4f\x1c\x8b\x91\x44\x66\x32\xa7\x6f\x01\x31\x06\x2a\x95\xac\xfc\x3e\xf4\xa4\xe8\xc7\x47\x06\x12\xe3\xa3\xa0\x69\x7a\xe9\xb8\xfe\xe2\xa6\x6a\x58\x70\xac\xc5\xdf\x81\xeb\x6e\x0a\xa1\x29\x19\x02\x38\x31\xa5\xd1\x1f\x57\xcb\x67\xdf\x5e\xf6\xd2\x61\x0b\x07\x10\xed\xfd\x08\x5a\x60\x77\x00\xc1\xca\x51\x63\x3c\xe8\x1e\x30\xe9\xff\x18\xe1\x5c\x71\xa2\x90\x74\x40\x67\xc5\x63\xac\xe5\x39\x6e\x45\x47\x4b\x10\xa5\x66\x59\x3e\x5d\xca\x82\xa5\xb2\x44\xfe\x61\xc3\xd2\xdb\x2b\x4e\xaa\x16\x34\x54\x26\x82\x23\x5e\x8a\x30\xfc\x99\x20\xba\x13\x1d\xc0\xb6\x35\xfb\x3e\x6e\x78\xf4\xee\x36\x8d\xfb\xfa\x9a\x97\x34\x14\xbb\x6e\x47\xd5\x0f\xf4\xf0\x2e\x37\x23\x95\x90\x5f\xa7\x59\xbc\xde\x73\xf6\x9c\x5c\xf3\x78\xd2\xe1\xcf\xed\x65\xd3\x2f\x6d\xf9\xb6\xd3\x3c\xd8\x31\x27\xa5\xca\xf6\xfa\xaf\x9f\x3b\x40\x38\xc9\x1a\x50\x24\xc1\x03\x92\xec\xf6\x94\xb8\xee\xa1\x7f\x83\xf3\xfe\x12\xc9\x7d\x25\xb2\xed\x24\x01\x87\x01\xe9\xe4\x82\x7f\xb2\xf2\xb2\x23\xbc\x9b\xb2\x38\x5d\x1e\x37\x86\xf5\x24\x23\x90\xf9\x8d\x3e\x2e\xe6\xb7\xc7\xa9\x71\x62\x30\xe6\x8b\xbc\xa6\x05\xf9\xf6\x43\x82\x79\xc8\xea\x5d\xad\xdb\xfc\xaf\xdb\xeb\x83\x75\xe9\x40\xbd\x34\x7b\xf3\x50\xd5\x9b\x9e\xe5\xdf\x01\x08\xde\x0d\xf9\xfa\xfd\xf5\xf8\xfe\x09\x00\x00\xff\xff\x78\x47\xcb\x8f\x71\x03\x00\x00")

func resources_ddl_insert_stop_times_full_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_insert_stop_times_full_sql,
		"resources/ddl/insert-stop_times_full.sql",
	)
}

func resources_ddl_insert_stop_times_full_sql() (*asset, error) {
	bytes, err := resources_ddl_insert_stop_times_full_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/insert-stop_times_full.sql", size: 881, mode: os.FileMode(420), modTime: time.Unix(1425032322, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_routes_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd0\x41\x4b\xc3\x30\x14\x07\xf0\x7b\x3f\xc5\xbb\x08\x2d\x38\xa1\x52\x65\x20\x3b\x64\xdb\x53\x8b\xb5\x4a\xcd\x0e\x3b\x35\x31\xcb\xba\x41\x97\x48\xf2\x2a\xdb\xb7\xd7\x32\xd8\xac\x50\x56\xc8\x25\xef\xff\xe3\xf1\xe7\xcd\x0a\x64\x1c\x81\xb3\x69\x86\x20\x2a\x5a\xfb\xf2\xca\x8b\x1b\xe1\x6c\x43\xda\x0b\x08\x03\x80\xe3\xa7\xdc\xae\x04\x6c\x0d\x85\x71\x1c\x41\xfe\xc6\x21\x5f\x64\xd9\x75\x1b\xcb\x4a\x1b\x75\xe8\xe4\x73\x7c\x64\x8b\xec\x8f\x39\xae\xf0\x1b\xeb\xa8\x34\x72\xa7\x05\x7c\x4b\xa7\x36\xd2\x85\xc9\x5d\x2f\xaf\xad\xa9\xfe\xe9\xf8\x76\xdc\xcb\x57\xda\xab\xb3\xbc\x4f\x7a\x21\x1d\xbe\xf4\xc5\xae\x8d\xab\x07\x95\x54\xb6\xb6\x6e\x90\x24\xbd\xa7\x21\x7c\x34\x82\xf7\x22\x7d\x65\xc5\x12\x5e\x70\x09\xe1\xf9\xfe\x51\x1b\xb7\xb3\xd3\xe8\xf7\xed\x45\x87\x04\x11\x60\xfe\x94\xe6\x38\x49\x8d\xb1\xf3\xe9\x69\xfd\xec\x99\x15\x1f\xc8\x27\x0d\xad\xc7\xbb\xcf\xe4\x21\xf8\x09\x00\x00\xff\xff\xa6\xf5\xc8\x42\xfc\x01\x00\x00")

func resources_ddl_routes_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_routes_sql,
		"resources/ddl/routes.sql",
	)
}

func resources_ddl_routes_sql() (*asset, error) {
	bytes, err := resources_ddl_routes_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/routes.sql", size: 508, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_select_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x4e\xcd\x49\x4d\x2e\x51\xc8\xcd\xcc\xd3\x28\xd6\x4b\x28\x2e\xc9\x2f\x88\xcf\x49\x2c\x49\xd0\xd4\x51\xc8\x4d\xac\xc0\x10\x42\x56\x95\x9f\x87\xa1\x0a\x24\xa4\x90\x56\x94\x9f\xab\x90\x90\x5e\x92\x56\x1c\xaf\x5a\x9c\x00\x91\x2a\x4e\x50\x28\x06\x04\x00\x00\xff\xff\x27\xdf\x80\x60\x6a\x00\x00\x00")

func resources_ddl_select_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_select_agency_zone_sql,
		"resources/ddl/select-agency-zone.sql",
	)
}

func resources_ddl_select_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_select_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/select-agency-zone.sql", size: 106, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stop_times_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8f\x41\x4b\x03\x31\x10\x46\xef\xfb\x2b\xe6\x22\x6c\x41\x84\x82\x87\x82\xf4\x90\xb6\x51\x0b\x21\x42\x4d\xcf\x99\xb8\x49\xda\xa0\xcd\xc6\x49\x52\xf0\xdf\xdb\xee\x41\x3d\xac\x7b\xc9\xe5\xbd\xbc\x8f\x59\xef\x38\x53\x1c\x14\x5b\x09\x0e\x78\x28\x3e\xeb\x9b\x8c\x77\x98\x4b\x9f\x74\x09\x27\x97\x11\xda\x06\x00\x0b\x85\xa4\x83\x45\x08\xb1\xb4\xf3\xf9\x0c\xe4\x8b\x02\xb9\x17\xe2\xf6\x4a\x0d\x51\x38\x9b\x8f\xe1\x07\xc2\xf5\x85\x0d\x7f\x64\x7b\xf1\xc7\xb1\x2e\x19\x2a\x95\xdc\xa4\x35\x0c\xff\xbb\x33\xd0\xec\x3e\xab\x8b\x9d\xfb\x75\xc6\x2b\x47\x67\xac\xce\xe1\x10\x11\xce\x86\xba\xa3\xa1\x76\x31\xe2\xa6\xd0\xbd\xd7\xcb\xb1\x5f\x69\xaa\x68\xe9\x52\xec\xbd\x9f\xf0\x9a\x19\x70\xf9\xb4\x95\x7c\xb9\x8d\xb1\xdf\xac\x7e\xe0\xfa\x99\xed\x5e\xb9\x5a\xd6\xe2\x17\xa7\xb7\xfb\x87\xe6\x3b\x00\x00\xff\xff\xc4\x47\xdc\x13\x76\x01\x00\x00")

func resources_ddl_stop_times_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stop_times_sql,
		"resources/ddl/stop_times.sql",
	)
}

func resources_ddl_stop_times_sql() (*asset, error) {
	bytes, err := resources_ddl_stop_times_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stop_times.sql", size: 374, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stop_times_indexes_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x28\x2e\xc9\x2f\x88\x2f\xc9\xcc\x4d\x2d\x4e\xe0\xd2\xd5\x55\x00\x02\x47\x17\x17\x85\x80\x20\x4f\x5f\xc7\xa0\x48\x05\x6f\xd7\x48\x05\x8d\x84\x92\xa2\xcc\x82\xf8\xcc\x94\x04\x1d\x05\x88\x72\x20\x53\x53\x87\x0b\xa6\xd6\xd3\xcf\xc5\x35\x42\x01\xa6\x08\x88\x2a\x12\x90\xf4\x28\x38\x06\x3b\x63\x2a\x86\x1a\x03\x53\x0c\x33\x15\xac\xd8\x9a\x0b\x10\x00\x00\xff\xff\xf7\xd8\xdd\x4c\xab\x00\x00\x00")

func resources_ddl_stop_times_indexes_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stop_times_indexes_sql,
		"resources/ddl/stop_times_indexes.sql",
	)
}

func resources_ddl_stop_times_indexes_sql() (*asset, error) {
	bytes, err := resources_ddl_stop_times_indexes_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stop_times_indexes.sql", size: 171, mode: os.FileMode(420), modTime: time.Unix(1424961624, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_stops_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xd1\x51\x6b\xc2\x30\x10\x07\xf0\xf7\x7e\x8a\x7b\x19\xb4\x30\x07\x1d\xdd\x10\x86\x0f\x51\x4f\x57\x56\xdb\xd1\xc5\x07\x9f\x9a\xac\x8d\xae\x50\x93\xd2\x9c\x63\xdb\xa7\x9f\x2b\xac\x8a\x52\x85\x3c\x84\xbb\x1f\x47\xfe\xb9\x49\x8a\x8c\x23\x70\x36\x8e\x10\xc4\x86\xd6\x36\xbb\xb1\xe2\x4e\x58\x32\xb5\x15\xe0\x3a\x00\xed\x3d\x2b\x0b\x01\xa5\x26\xd7\xf7\x3d\x88\x13\x0e\xf1\x32\x8a\x6e\xbb\x6e\x6e\x0a\x25\xe0\x53\x36\xf9\x87\x6c\xdc\xe0\xc1\x83\x29\xce\xd8\x32\x3a\x75\x5a\x6e\x8f\xdc\x63\xd0\xe7\x0a\x65\xf3\x83\xf3\xef\x87\x7d\xb0\x92\x24\x60\x16\x25\x8c\xf7\x01\xa3\x2f\x83\x8d\x32\x02\xe6\x98\x2c\x90\xa7\xab\x73\xf3\x63\xb4\x6a\xc3\x5f\x0f\xb7\x6b\xaa\x2b\xac\x32\xb9\xa4\xd2\xe8\x8c\xbe\x6b\x75\xf8\xcf\x33\x57\xcb\x46\x69\xca\x2c\xb5\xfa\xf2\xd0\xc1\x00\x5e\xd3\x70\xc1\xf6\x8f\x7f\xc1\x15\xb8\xdd\xba\xbc\xbf\x2e\xb4\xc5\xff\xda\xfe\x7c\x89\x63\xe2\x78\x80\xf1\x3c\x8c\x71\x14\x6a\x6d\xa6\xe3\x6e\xfa\xe4\x99\xa5\x6f\xc8\x47\x3b\x5a\x0f\xb7\xef\xc1\x93\xf3\x1b\x00\x00\xff\xff\xa9\xef\x7c\x63\x29\x02\x00\x00")

func resources_ddl_stops_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_stops_sql,
		"resources/ddl/stops.sql",
	)
}

func resources_ddl_stops_sql() (*asset, error) {
	bytes, err := resources_ddl_stops_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/stops.sql", size: 553, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_transfers_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8f\x31\x4f\xc3\x30\x10\x85\xf7\xfc\x8a\x5b\x50\x13\x29\x45\x54\x2a\x12\x12\xea\xe0\xb6\x07\x44\x84\x80\x82\x3b\x74\xf2\x05\xa8\xc1\x83\xed\xca\x36\x08\xfe\x3d\x04\x91\xda\xe9\x84\x74\xe3\xf7\xbd\xf7\x6e\xd5\x22\xe3\x08\x9c\x2d\x6b\x04\x7a\x0d\xd2\x8b\x13\x4f\xa7\x14\x5c\x67\xbc\xdc\x39\x4f\x90\x67\x00\x24\x9d\xd5\xc2\x07\xbb\x17\xea\x85\xe0\xa3\x73\xcf\x6f\x9d\xcb\xe7\xe7\x05\x34\xf7\x1c\x9a\x4d\x5d\x97\x3d\x16\xec\x7f\xa0\xbf\x6c\x11\xbe\xf6\x3b\x02\x65\x42\x3e\x9b\x45\x06\xd6\x78\xc5\x36\x35\x87\xc9\xd9\xe4\x97\xd7\xca\x88\xe8\x28\x9d\x38\x03\x3a\x64\x4f\xa7\xf0\xd0\x56\x77\xac\xdd\xc2\x2d\x6e\x21\x1f\xef\x2e\xd3\x7d\xe5\xd1\x8e\xa2\xf7\x7b\x69\xe4\xfc\xdc\x27\x1d\xe7\x44\x34\xe6\x0d\x60\xd2\x90\x60\x69\xd3\x81\x1c\xd7\x67\x59\x01\xd8\x5c\x57\x0d\x2e\x2a\x63\xec\x7a\x79\x78\x6e\x75\xc3\xda\x47\xe4\x8b\xf7\x20\x2f\xf4\xd3\xfc\x32\xfb\x0e\x00\x00\xff\xff\xb9\x0a\x41\x26\xb5\x01\x00\x00")

func resources_ddl_transfers_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_transfers_sql,
		"resources/ddl/transfers.sql",
	)
}

func resources_ddl_transfers_sql() (*asset, error) {
	bytes, err := resources_ddl_transfers_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/transfers.sql", size: 437, mode: os.FileMode(420), modTime: time.Unix(1424961624, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_trips_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xd0\x41\x4b\xc3\x30\x14\x07\xf0\x7b\x3f\xc5\xbb\x08\x2d\x38\x61\x30\x41\x90\x1d\xb2\xed\xa9\xc5\x5a\xa5\x66\x87\x9d\xf6\xb2\x34\x5b\x83\x9a\x8c\x24\x1b\x7e\x7c\x8d\x90\x4e\x65\x6c\x90\xd3\x7b\x3f\xfe\x49\xfe\xd3\x06\x19\x47\xe0\x6c\x52\x21\xd0\x26\xac\xfd\xf2\xc2\xd3\x15\x05\xa7\xb7\x9e\x20\xcf\x00\xc8\xd9\x5d\x50\x4b\xdd\x12\x68\x13\xf2\xe1\xb0\x80\x19\xde\xb1\x79\xc5\xa1\x9e\x57\xd5\x65\x24\x5e\xb9\xbd\x96\x67\x50\xcc\xfc\x23\xea\xe7\xff\xdb\x4e\x89\xd6\xeb\x8d\x21\xd8\x0b\x27\x3b\xe1\xf2\xd1\xf5\x91\xa4\x56\x3b\x25\x83\xb6\xe6\xf4\x85\xab\x77\x2b\xdf\x7e\xc8\xc9\x34\xdf\x89\xad\x3a\xcb\x06\x03\x78\x69\xca\x27\xd6\x2c\xe0\x11\x17\x90\xf7\xdf\x29\xe2\x36\x8e\xd2\xe4\xfb\x7c\xd2\x51\x90\x9a\x4c\xa2\x6f\xf6\x40\x0e\x4d\x26\xf4\xab\xdb\x22\x2b\x00\xeb\xfb\xb2\xc6\x71\x69\x8c\x9d\x4d\xfa\x57\x4e\x1f\x58\xf3\x8a\x7c\xbc\x0b\xeb\x9b\x8f\xd5\xe8\x36\xfb\x0a\x00\x00\xff\xff\xb8\x94\x5d\x47\xd9\x01\x00\x00")

func resources_ddl_trips_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_trips_sql,
		"resources/ddl/trips.sql",
	)
}

func resources_ddl_trips_sql() (*asset, error) {
	bytes, err := resources_ddl_trips_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/trips.sql", size: 473, mode: os.FileMode(420), modTime: time.Unix(1425023256, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_update_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x2d\x48\x49\x2c\x49\x55\x48\x48\x2f\x49\x2b\x8e\x57\x2d\x4e\xd0\x4b\x48\x4c\x4f\xcd\x4b\xce\x4c\x2d\x4e\x50\x28\x4e\x2d\x51\x80\x70\x2b\xe3\x73\x33\xf3\xe2\x73\x12\x4b\x12\x6c\xed\x75\x10\x62\x89\x15\x98\x62\x20\x75\xf9\x79\x98\xea\xc0\x62\x5c\x80\x00\x00\x00\xff\xff\x6c\xbd\xa7\x65\x6f\x00\x00\x00")

func resources_ddl_update_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_update_agency_zone_sql,
		"resources/ddl/update-agency-zone.sql",
	)
}

func resources_ddl_update_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_update_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/update-agency-zone.sql", size: 111, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _resources_ddl_update_gtfs_agency_zone_sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x2d\x48\x49\x2c\x49\x55\x48\x48\x2f\x49\x2b\x4e\xd0\x4b\x48\x4c\x4f\xcd\x4b\xce\x4c\x2d\x4e\x50\x28\x4e\x2d\x51\x80\x70\x2b\xe3\x73\x33\xf3\xe2\x73\x12\x4b\x12\x6c\xed\x75\x10\x62\x89\x15\x98\x62\x20\x75\xf9\x79\x98\xea\xc0\x62\x0a\xe5\x19\xa9\x45\xa9\x70\x89\xec\xd4\x4a\xa0\x20\x17\x20\x00\x00\xff\xff\x86\xf4\xa1\xf0\x81\x00\x00\x00")

func resources_ddl_update_gtfs_agency_zone_sql_bytes() ([]byte, error) {
	return bindata_read(
		_resources_ddl_update_gtfs_agency_zone_sql,
		"resources/ddl/update-gtfs-agency-zone.sql",
	)
}

func resources_ddl_update_gtfs_agency_zone_sql() (*asset, error) {
	bytes, err := resources_ddl_update_gtfs_agency_zone_sql_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "resources/ddl/update-gtfs-agency-zone.sql", size: 129, mode: os.FileMode(420), modTime: time.Unix(1424680082, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/ddl/agencies.sql": resources_ddl_agencies_sql,
	"resources/ddl/calendar_dates.sql": resources_ddl_calendar_dates_sql,
	"resources/ddl/calendars.sql": resources_ddl_calendars_sql,
	"resources/ddl/create-table-line_stops.sql": resources_ddl_create_table_line_stops_sql,
	"resources/ddl/create-table-lines.sql": resources_ddl_create_table_lines_sql,
	"resources/ddl/create-table-route_stops.sql": resources_ddl_create_table_route_stops_sql,
	"resources/ddl/create-table-station_lines.sql": resources_ddl_create_table_station_lines_sql,
	"resources/ddl/create-table-station_stops.sql": resources_ddl_create_table_station_stops_sql,
	"resources/ddl/create-table-stations.sql": resources_ddl_create_table_stations_sql,
	"resources/ddl/create-table-stop_times_full.sql": resources_ddl_create_table_stop_times_full_sql,
	"resources/ddl/insert-line_stops.sql": resources_ddl_insert_line_stops_sql,
	"resources/ddl/insert-lines.sql": resources_ddl_insert_lines_sql,
	"resources/ddl/insert-route_stops.sql": resources_ddl_insert_route_stops_sql,
	"resources/ddl/insert-station_lines.sql": resources_ddl_insert_station_lines_sql,
	"resources/ddl/insert-station_stops.sql": resources_ddl_insert_station_stops_sql,
	"resources/ddl/insert-stations.sql": resources_ddl_insert_stations_sql,
	"resources/ddl/insert-stop_times_full.sql": resources_ddl_insert_stop_times_full_sql,
	"resources/ddl/routes.sql": resources_ddl_routes_sql,
	"resources/ddl/select-agency-zone.sql": resources_ddl_select_agency_zone_sql,
	"resources/ddl/stop_times.sql": resources_ddl_stop_times_sql,
	"resources/ddl/stop_times_indexes.sql": resources_ddl_stop_times_indexes_sql,
	"resources/ddl/stops.sql": resources_ddl_stops_sql,
	"resources/ddl/transfers.sql": resources_ddl_transfers_sql,
	"resources/ddl/trips.sql": resources_ddl_trips_sql,
	"resources/ddl/update-agency-zone.sql": resources_ddl_update_agency_zone_sql,
	"resources/ddl/update-gtfs-agency-zone.sql": resources_ddl_update_gtfs_agency_zone_sql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"resources": &_bintree_t{nil, map[string]*_bintree_t{
		"ddl": &_bintree_t{nil, map[string]*_bintree_t{
			"agencies.sql": &_bintree_t{resources_ddl_agencies_sql, map[string]*_bintree_t{
			}},
			"calendar_dates.sql": &_bintree_t{resources_ddl_calendar_dates_sql, map[string]*_bintree_t{
			}},
			"calendars.sql": &_bintree_t{resources_ddl_calendars_sql, map[string]*_bintree_t{
			}},
			"create-table-line_stops.sql": &_bintree_t{resources_ddl_create_table_line_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-lines.sql": &_bintree_t{resources_ddl_create_table_lines_sql, map[string]*_bintree_t{
			}},
			"create-table-route_stops.sql": &_bintree_t{resources_ddl_create_table_route_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-station_lines.sql": &_bintree_t{resources_ddl_create_table_station_lines_sql, map[string]*_bintree_t{
			}},
			"create-table-station_stops.sql": &_bintree_t{resources_ddl_create_table_station_stops_sql, map[string]*_bintree_t{
			}},
			"create-table-stations.sql": &_bintree_t{resources_ddl_create_table_stations_sql, map[string]*_bintree_t{
			}},
			"create-table-stop_times_full.sql": &_bintree_t{resources_ddl_create_table_stop_times_full_sql, map[string]*_bintree_t{
			}},
			"insert-line_stops.sql": &_bintree_t{resources_ddl_insert_line_stops_sql, map[string]*_bintree_t{
			}},
			"insert-lines.sql": &_bintree_t{resources_ddl_insert_lines_sql, map[string]*_bintree_t{
			}},
			"insert-route_stops.sql": &_bintree_t{resources_ddl_insert_route_stops_sql, map[string]*_bintree_t{
			}},
			"insert-station_lines.sql": &_bintree_t{resources_ddl_insert_station_lines_sql, map[string]*_bintree_t{
			}},
			"insert-station_stops.sql": &_bintree_t{resources_ddl_insert_station_stops_sql, map[string]*_bintree_t{
			}},
			"insert-stations.sql": &_bintree_t{resources_ddl_insert_stations_sql, map[string]*_bintree_t{
			}},
			"insert-stop_times_full.sql": &_bintree_t{resources_ddl_insert_stop_times_full_sql, map[string]*_bintree_t{
			}},
			"routes.sql": &_bintree_t{resources_ddl_routes_sql, map[string]*_bintree_t{
			}},
			"select-agency-zone.sql": &_bintree_t{resources_ddl_select_agency_zone_sql, map[string]*_bintree_t{
			}},
			"stop_times.sql": &_bintree_t{resources_ddl_stop_times_sql, map[string]*_bintree_t{
			}},
			"stop_times_indexes.sql": &_bintree_t{resources_ddl_stop_times_indexes_sql, map[string]*_bintree_t{
			}},
			"stops.sql": &_bintree_t{resources_ddl_stops_sql, map[string]*_bintree_t{
			}},
			"transfers.sql": &_bintree_t{resources_ddl_transfers_sql, map[string]*_bintree_t{
			}},
			"trips.sql": &_bintree_t{resources_ddl_trips_sql, map[string]*_bintree_t{
			}},
			"update-agency-zone.sql": &_bintree_t{resources_ddl_update_agency_zone_sql, map[string]*_bintree_t{
			}},
			"update-gtfs-agency-zone.sql": &_bintree_t{resources_ddl_update_gtfs_agency_zone_sql, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

